var m=Object.defineProperty;var a=(h,e,t)=>(typeof e!="symbol"&&(e+=""),e in h?m(h,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):h[e]=t);var l=(h,e,t)=>new Promise((i,s)=>{var n=c=>{try{r(t.next(c))}catch(d){s(d)}},o=c=>{try{r(t.throw(c))}catch(d){s(d)}},r=c=>c.done?i(c.value):Promise.resolve(c.value).then(n,o);r((t=t.apply(h,e)).next())});import"../../../_snowpack/pkg/regenerator-runtime/runtime.js";export class hegduino{constructor(e="usb",t=o=>{},i=()=>{},s=()=>{},n="http://192.168.4.1/"){this.interface=null,this.mode=e,e==="usb"||e==="serial"?this.setupSerialDevice(t,i,s):e==="ble"||e==="bt"?this.setupBLEDevice(t,i,s):(e==="wifi"||e==="events"||e==="sse")&&this.setupSSEDevice(n,t,i,s)}setupSerialDevice(e=()=>{},t=()=>{},i=()=>{}){this.interface=new webSerial,this.interface.onConnectedCallback=t,this.interface.onReadLine=e,this.interface.onDisconnectedCallback=i}setupBLEDevice(e=()=>{},t=()=>{},i=()=>{}){this.interface=new hegBLE,this.interface.onConnectedCallback=t,this.interface.onDisconnectedCallback=i,this.interface.onNotificationCallback=s=>{var n=this.interface.decoder.decode(s.target.value);e(n)}}setupSSEDevice(e="http://192.168.4.1/",t=()=>{},i=()=>{},s=()=>{}){let n=o=>{t(o.data)};this.interface=new EventSourceUtil(e+"events",i,s,void 0,[{tag:"heg",callback:n}]),this.interface.newPostFunction("sendCommand",e+"command")}sendCommand(e=""){this.mode==="usb"||this.mode==="serial"?navigator.serial?this.interface.sendMessageAsync(e):this.interface.sendMessage(e):this.mode==="ble"||this.mode==="bt"?this.interface.sendMessage(e):(this.mode==="wifi"||this.mode==="events"||this.mode==="sse")&&this.interface.sendCommand(e)}connect(e){this.mode==="usb"||this.mode==="serial"?navigator.serial?this.interface.setupSerialAsync():chrome.serial?this.interface.connectSelected(!0,e):(console.error("ERROR: Cannot locate navigator.serial. Enable #experimental-web-platform-features in chrome://flags"),alert("Serial support not found. Enable #experimental-web-platform-features in chrome://flags or use a chrome extension")):this.mode==="ble"||this.mode==="bt"?this.interface.connect():(this.mode==="wifi"||this.mode==="events"||this.mode==="sse")&&this.interface.open()}disconnect(){this.mode==="usb"||this.mode==="serial"?navigator.serial?this.interface.closePort():this.interface.connectSelected(!1):this.mode==="ble"||this.mode==="bt"?this.interface.disconnect():(this.mode==="wifi"||this.mode==="events"||this.mode==="sse")&&this.interface.close()}}export class hegBLE{constructor(e="6e400001-b5a3-f393-e0a9-e50e24dcca9e",t="6e400002-b5a3-f393-e0a9-e50e24dcca9e",i="6e400003-b5a3-f393-e0a9-e50e24dcca9e",s=!1,n="main_body",o="blebutton",r=!1){a(this,"connect",(e=this.serviceUUID,t=this.rxUUID,i=this.txUUID)=>{navigator.bluetooth.requestDevice({acceptAllDevices:!0,optionalServices:[e]}).then(n=>(this.device=n,n.gatt.connect())).then(s(100)).then(n=>n.getPrimaryService(e)).then(s(100)).then(n=>(this.service=n,n.getCharacteristic(t).then(s(100)).then(o=>(this.rxchar=o,o.writeValue(this.encoder.encode("t")))),this.android==!0&&n.getCharacteristic(t).then(s(1e3)).then(o=>o.writeValue(this.encoder.encode("o"))),n.getCharacteristic(i))).then(s(1100)).then(n=>(this.txchar=n,n.startNotifications())).then(s(100)).then(n=>{n.addEventListener("characteristicvaluechanged",this.onNotificationCallback)}).then(s(100)).then(this.onConnectedCallback()).catch(n=>{console.error(n),this.onErrorCallback(n)});function s(n){return function(o){return new Promise(r=>setTimeout(()=>r(o),n))}}});a(this,"onNotificationCallback",e=>{var t=this.decoder.decode(e.target.value);console.log("BLE MSG: ",t)});a(this,"onConnectedCallback",()=>{});a(this,"sendMessage",e=>{this.rxchar.writeValue(this.encoder.encode(e))});a(this,"disconnect",()=>{var e;(e=this.server)==null||e.disconnect(),this.onDisconnectedCallback()});a(this,"onDisconnectedCallback",()=>{console.log("BLE device disconnected!")});a(this,"onReadAsyncCallback",e=>{console.log("BLE Data: ",e)});a(this,"stopReadAsync",()=>{this.doReadHeg=!1,tx.writeValue(this.encoder.encode("f"))});a(this,"spsinterval",()=>{setTimeout(()=>{console.log("SPS",this.n+""),this.n=0,this.spsinterval()},1e3)});this.serviceUUID=e,this.rxUUID=t,this.txUUID=i,this.encoder=new TextEncoder("utf-8"),this.decoder=new TextDecoder("utf-8"),this.device=null,this.server=null,this.service=null,this.rxchar=null,this.txchar=null,this.parentId=n,this.buttonId=o,this.async=r,this.android=navigator.userAgent.toLowerCase().indexOf("android")>-1,this.n,s===!0&&this.initUI(n,o)}initUI(e,t){this.device!==null&&this.device.gatt.connected&&(this.device.gatt.disconnect(),console.log("device disconnected"));var i='<button id="'+t+'">BLE Connect</button>';HEGwebAPI.appendFragment(i,e),document.getElementById(t).onclick=()=>{this.async===!1?this.connect():this.initBLEasync()}}connectAsync(){return l(this,null,function*(){var s;this.device=yield navigator.bluetooth.requestDevice({filters:[{namePrefix:"HEG"}],optionalServices:[this.serviceUUID]}),console.log("BLE Device: ",this.device);const e=yield(s=this.device.gatt)==null?void 0:s.connect();if(!e)throw"no connection";this.device.addEventListener("gattserverdisconnected",onDisconnected),this.server=e;const t=yield this.server.getPrimaryService(this.serviceUUID),i=yield t.getCharacteristic(this.rxUUID);return yield i.writeValue(this.encoder.encode("t")),this.android==!0&&(yield i.writeValue(this.encoder.encode("o"))),this.characteristic=yield t.getCharacteristic(this.txUUID),this.onConnectedCallback(),!0})}readDeviceAsync(){return l(this,null,function*(){if(!this.characteristic)throw console.log("HEG not connected"),"error";this.doReadHeg=!0;for(var e="";this.doReadHeg;){const t=this.decoder.decode(yield this.characteristic.readValue());t!==this.data&&(e=t,console.log(e),this.n+=1,this.onReadAsyncCallback(e))}})}initBLEasync(){return l(this,null,function*(){yield this.connectAsync(),this.readDeviceasync(),this.spsinterval()})}}export class EventSourceUtil{constructor(e="http://192.168.4.1/events",t=this.onOpen,i=this.onError,s=this.onMsg,n=[]){a(this,"onOpen",e=>{console.log("Events Connected!",e.data)});a(this,"onError",e=>{console.log("event source error:",e.data),e.target.readyState!==EventSource.OPEN&&console.log("Events Disconnected")});a(this,"onMsg",e=>{console.log("event source:",e.data)});a(this,"open",()=>{this.createEventListeners()});a(this,"close",()=>{this.removeEventListeners()});this.hostUrl=e,this.onOpen=t,this.onError=i,this.onMsg=s,this.source=null,this.customCallbacks=n,this.createEventListeners(e,custom)}createEventListeners(e=this.hostUrl,t=this.customCallbacks,i=this.source){i!==null&&this.removeEventListeners(t,i),window.EventSource&&(i=new EventSource(e),i.addEventListener("open",this.onOpen,!1),i.addEventListener("error",this.onError,!1),i.addEventListener("message",this.onMsg,!1),t.length>0&&t.forEach((s,n)=>{i.addEventListener(s.tag,s.callback,!1)}))}removeEventListeners(e=this.custom,t=this.source){window.EventSource&&(t.close(),t.removeEventListener("open",this.openEvent,!1),t.removeEventListener("error",this.errorEvent,!1),t.removeEventListener("message",this.messageEvent,!1),e.length>0&&e.forEach((i,s)=>{t.removeEventListener(i.tag,i.callback,!1)}),t=null)}newPostFunction(e="post",t=this.hostUrl,i=void 0,s=void 0,n=void 0){const o=()=>{var r=new XMLHttpRequest;r.open("POST",t,!0,s,n),r.send(i),r.onerror=function(){r.abort()}};return this[e]=o,o}}export class webSerial{constructor(e=!1,t="serialmenu",i="serialmonitor"){a(this,"onGetDevices",e=>{document.getElementById("serialports").innerHTML="";for(var t=[],i=0;i<e.length;i++)console.log(e[i].path);e.forEach(s=>{var n=s.displayName+"("+s.path+")";if(console.log("displayName "+n),n||(n=s.path),t.push({option:n,value:s.path}),console.log(this.defaultUI),this.defaultUI==!0){var o=document.createElement("option");o.text=n,o.value=s.path,console.log("option",o),document.getElementById("serialports").appendChild(o)}}),this.displayPorts=t});a(this,"onReceive",e=>{if(e.connectionId!==this.connectionId){console.log("ERR: Receive ID:",e.connectionId);return}var t=new Uint8Array(e.data),i=String.fromCharCode.apply(null,t);this.encodedBuffer+=decodeURIComponent(escape(i)),console.log(this.encodedBuffer.length);for(var s;(s=this.encodedBuffer.indexOf(`
`))>=0;){var n=this.encodedBuffer.substr(0,s+1);this.recordData==!0&&this.recorded.push(n),(this.monitoring=!0)&&(this.newSamples++,this.monitorData.push(n)),this.onReadLine(n),this.encodedBuffer=this.encodedBuffer.substr(s+1)}});a(this,"onConnectComplete",e=>{this.connectionId=e.connectionId,console.log("Connected! ID:",this.connectionId),chrome.serial.onReceive.addListener(this.onReceive),chrome.serial.onReceiveError.addListener(this.onReceiveError),this.onConnectedCallback()});this.displayPorts=[],this.defaultUI=e,this.encodedBuffer="",this.connectionId=-1,this.recordData=!1,this.recorded=[],this.port=null,this.decoder=null,this.subscribed=!1,this.reader=null,this.writer=null,this.monitoring=!1,this.newSamples=0,this.monitorSamples=1e4,this.monitorData=[],this.monitorIdx=0,chrome.serial?(e===!0&&this.setupSelect(t,!1),this.setupSerial()):navigator.serial?(this.decoder=new TextDecoder,e===!0&&this.setupSelect(t,!0)):(console.log("ERROR: Cannot locate navigator.serial. Enable #experimental-web-platform-features in chrome://flags"),alert("Serial support not found. Enable #experimental-web-platform-features in chrome://flags or use a chrome extension"))}setupSelect(e,t=!0){if(chrome.serial){var i=document.createElement("select");i.setAttribute("id","serialports");var s=document.createDocumentFragment();s.appendChild(i),document.getElementById(e).innerHTML='<button id="refreshSerial">Get</button><button id="connectSerial">Set</button>',document.getElementById(e).appendChild(s),document.getElementById("connectSerial").onclick=()=>{t?this.setupSerialAsync():(this.connectionId!==-1&&this.connectSelected(!1),this.connectSelected(!0,document.getElementById("serialports").value))}}else if(navigator.serial){var s=document.createDocumentFragment();document.getElementById(e).innerHTML='<button id="refreshSerial">Set USB Device</button>',document.getElementById(e).appendChild(s)}document.getElementById("refreshSerial").onclick=()=>{t?this.setupSerialAsync():this.setupSerial()}}setupMonitor(e){this.monitorData.length>this.monitorSamples&&this.monitorData.splice(0,this.monitorData.length-this.monitorSamples);var t=document.createElement("div");t.setAttribute("id","streamMonitor"),this.monitorData.forEach((n,o)=>{t.innerHTML+="<div id="+this.monitorIdx+">"+n+"</div>",this.monitorIdx++}),this.newSamples=0;var i=document.createDocumentFragment();i.appendChild(t),document.getElementById(e).appendChild(i);var s=()=>{if(this.newSamples>0){if(this.monitorData.length>this.monitorSamples){for(var n=this.monitorIdx-this.monitorSamples-(this.monitorData.length-this.monitorSamples);n>this.monitorIdx-this.monitorSamples;n++)document.getElementById(n).remove();this.monitorData.splice(0,this.monitorData.length-this.monitorSamples)}for(var n=0;n<newSamples;n++){var o=document.createElement("div");o.innerHTML='<div id="'+this.monitorIdx+'">'+this.monitorData[this.monitorData.length-1-n]+"</div>";var r=document.createDocumentFragment();r.appendChild(o),document.getElementById(e).appendChild(r),this.monitorIdx++;var c=document.getElementById("streamMonitor");c.scrollTop=c.scrollHeight}setTimeout(requestAnimationFrame(s),15)}};requestAnimationFrame(s)}onReceiveError(e){console.log("onReceiveError"),e.connectionId===this.connectionId&&(console.log("Error from ID:",e.connectionId),this.onError.dispatch(e.error),console.log("Error: "+e.error))}onConnectedCallback(){console.log("USB device Ready!")}onDisconnectedCallback(){console.log("USB device disconnected!")}sendMessage(e){e+=`
`;for(var t=unescape(encodeURIComponent(e)),i=new Uint8Array(t.length),s=0;s<t.length;++s)i[s]=t.charCodeAt(s);chrome.serial?this.connectionId>-1?(chrome.serial.send(this.connectionId,i.buffer,this.onSendCallback),console.log("Send message:",e)):console.log("Device is disconnected!"):navigator.serial&&this.port.writable&&this.sendMessageAsync(i.buffer)}onSendCallback(e){console.log("sendInfo",e)}onReadLine(e){console.log(e)}connectSelected(e=!0,t=""){if(e==!0&&t!=="")console.log("Connecting",t),chrome.serial.connect(t,{bitrate:115200},this.onConnectComplete);else{if(console.log("Disconnect"+t),this.connectionId<0){console.log("connectionId",this.connectionId);return}this.encodedBuffer="",chrome.serial.onReceive.removeListener(this.onReceive),chrome.serial.onReceiveError.removeListener(this.onReceiveError),chrome.serial.flush(this.connectionId,function(){console.log("chrome.serial.flush",this.connectionId)}),chrome.serial.disconnect(this.connectionId,function(){console.log("chrome.serial.disconnect",this.connectionId)})}}setupSerial(){chrome.serial.getDevices(this.onGetDevices)}sendMessageAsync(e){return l(this,null,function*(){const t=this.port.writable.getWriter();yield t.write(e),t.releaseLock()})}onPortSelected(e){return l(this,null,function*(){try{yield e.open({baudRate:115200,bufferSize:1e3})}catch(t){yield e.open({baudrate:115200,buffersize:1e3})}this.onConnectedCallback(),this.subscribed=!0,this.subscribe(e)})}onReceiveAsync(e){this.encodedBuffer+=this.decoder.decode(e);for(var t;(t=this.encodedBuffer.indexOf(`
`))>=0;){var i=this.encodedBuffer.substr(0,t+1);this.recordData==!0&&this.recorded.push(i),(this.monitoring=!0)&&(this.newSamples++,this.monitorData.push(i)),this.onReadLine(i),this.encodedBuffer=this.encodedBuffer.substr(t+1)}}subscribe(e){return l(this,null,function*(){if(this.port.readable&&this.subscribed===!0){this.reader=e.readable.getReader();const t=()=>l(this,null,function*(){try{const{value:i,done:s}=yield this.reader.read();if((s||this.subscribed===!1)&&(yield this.reader.releaseLock()),i)try{this.onReceiveAsync(i),this.subscribed===!0&&setTimeout(()=>{t()},10)}catch(n){console.log(n)}}catch(i){console.log(i),this.closePort()}});t()}})}closePort(){return l(this,arguments,function*(e=this.port){this.port&&(this.subscribed=!1,setTimeout(()=>l(this,null,function*(){this.reader&&(this.reader=null),yield e.close(),this.port=null,this.connected=!1,this.onDisconnectedCallback()}),100))})}setupSerialAsync(){return l(this,null,function*(){const e=[{usbVendorId:4292,usbProductId:67}];this.port=yield navigator.serial.requestPort(),navigator.serial.addEventListener("disconnect",t=>{this.closePort()}),this.onPortSelected(this.port)})}saveCsv(e=this.recorded,t=new Date().toISOString(),i="|",s=`Header
`){var n=s;e.forEach(r=>{n+=r.split(i).join(",")+`
`});var o=document.createElement("a");o.href="data:text/csv;charset=utf-8,"+encodeURI(n),o.target="_blank",t!==""?o.download=t+".csv":o.download=new Date().toISOString()+".csv",o.click()}openFile(e=","){var t=document.createElement("input");t.type="file",t.onchange=i=>{this.csvDat=[];var s=i.target.files[0],n=new FileReader;n.readAsText(s),n.onload=o=>{var r=o.target.result,c=r.split(`
`);c.pop(),c.forEach((d,f)=>{if(f==0)var u=d.split(e);else{var u=d.split(e);this.csvDat.push(u)}}),this.onOpen()},t.value=""},t.click()}onOpen(){alert("CSV Opened!")}}

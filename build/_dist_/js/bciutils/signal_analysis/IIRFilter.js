var x=Object.defineProperty;var u=(a,t,s)=>(typeof t!="symbol"&&(t+=""),t in a?x(a,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[t]=s);export class IIRNotchFilter{constructor(t,s,h=.5){this.sps=t,this.frequency=s;let e=2*Math.PI,r=s/t,i=e*r,l=h/t,o=1-3*l,c=(1-2*o*Math.cos(i)+o*o)/(2-2*Math.cos(i));this.a0=c,this.a1=-2*c*Math.cos(i),this.a2=c,this.b1=2*o*Math.cos(i),this.b2=-o*o,this.x1=this.x2=this.y1=this.y2=0}}export class IIRLowPassFilter{constructor(t,s){this.sps=t,this.frequency=s;let h=2*Math.PI,e=Math.tan(s*Math.PI/t),r=1.414213562*e,i=e*e;this.a0=i/(1+r+i),this.a1=2*this.a0,this.a2=this.a0;let l=this.a1/i;this.b1=-2*this.a0+l,this.b2=1-2*this.a0-l,this.x1=this.x2=this.y1=this.y2=0}}export class IIRHighPassFilter{constructor(t,s){this.sps=t,this.frequency=s,this.TWO_PI=2*Math.PI;let h=Math.PI*2*s/t,e=1/2,r=Math.sin(h)/(2*e),i=1+r,l=-2*Math.cos(h),o=1-r,c=(1+Math.cos(h))*.5,p=-(1+Math.cos(h))*.5,y=(1+Math.cos(h))*.5;this.b1=-l/i,this.b2=-o/i,this.a0=c/i,this.a1=p/i,this.a2=y/i,console.log(this.a0,this.a1,this.b0,this.b1,this.b2),this.x1=this.x2=this.y1=this.y2=0}}export const applyFilter=(a,t)=>{let s=t.a0*a+t.a1*t.x1+t.a2*t.x2+t.b1*t.y1+t.b2*t.y2;return t.x2=t.x1,t.x1=a,t.y2=t.y1,t.y1=s,s};export class SMAFilter{constructor(t=4){this.window=t,this.buffer=[]}step(t){this.buffer.length<this.window?this.buffer.push(t):this.buffer.length===this.window&&(this.buffer.shift(),this.buffer.push(t));let s=this.buffer.reduce((h,e)=>e+=h)/this.buffer.length;return this.buffer[this.buffer.length-1]=s,s}}export class DCBlocker{constructor(t=.995){this.r=t,this.y1=this.y2=this.x1=this.x2=0}step(t){this.x2=this.x1,this.x1=t;let s=this.x1-this.x2+this.r*this.y1;return this.y2=this.y1,this.y1=s,s}}export class IIRFilter{constructor(t=512){u(this,"applyFilter",(t,s,h)=>{let e=s.a0*t+s.a1*s.x1+s.a2*s.x2+s.b1*s.y1+s.b2*s.y2;return s.x2=s.x1,s.x1=t,s.y2=s.y1,s.y1=e,this.currFiltered[h]=e,this.prevFiltered[h]=s.y2,e});u(this,"filter",t=>{let s=0;if(typeof t=="object")return s=[],t.forEach((h,e)=>{let r=h;this.filters.forEach((i,l)=>{r=this.applyFilter(r,i,l)}),s.push(r)}),s;if(typeof s=="number"){let h=step;return this.filters.forEach((e,r)=>{h=this.applyFilter(h,e,r)}),s=h,s}else return!1});this.filters=[],this.sps=t,this.latestIn=0,this.latestOut=0,this.prevFiltered=[],this.currFiltered=[]}addNotch(t=60,s=this.sps,h=.5){this.filters.push(new IIRNotchFilter(s,t,h)),this.prevFiltered.push(0),this.currFiltered.push(0)}addLowPass(t=1,s=this.sps){this.filters.push(new IIRButtersworthLowPassFilter(s,t)),this.prevFiltered.push(0),this.currFiltered.push(0)}addHighPass(t=128,s=this.sps){}}

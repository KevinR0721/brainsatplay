var l=Object.defineProperty;var i=(a,t,e)=>(typeof t!="symbol"&&(t+=""),t in a?l(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e);import{brainsatplay as n}from"../../brainsatplay.js";import{DOMFragment as c}from"../../frontend/utils/DOMFragment.js";import{BrainMap2D as o}from"../../bciutils/visuals/eegvisuals.js";import{genBandviewSelect as d}from"../../frontend/menus/selectTemplates.js";export class BrainMapApplet{constructor(t=document.body,e=new n,s=[]){i(this,"updateLoop",()=>{this.looping&&(this.bci.atlas.settings.eeg===!0&&this.bci.atlas.getLatestFFTData()[0].fftCount>0&&this.onUpdate(),setTimeout(()=>{this.loop=requestAnimationFrame(this.updateLoop)},16))});i(this,"onUpdate",()=>{var t=document.getElementById(this.props.id+"bandview").value;let e=.05;if(this.bci.devices[0]&&this.bci.devices[0].info.useFilters===!1&&(e=10),this.class.updateHeatmapFromAtlas(this.bci.atlas.data.eeg,this.bci.atlas.data.eegshared.eegChannelTags,t,e),this.bci.atlas.data.coherence[0].fftCount>0){let s=.1;this.bci.devices[0]&&this.bci.devices[0].info.useFilters===!1&&(s=10),this.class.updateConnectomeFromAtlas(this.bci.atlas.data.coherence,this.bci.atlas.data.eeg,this.bci.atlas.data.eegshared.eegChannelTags,t,!0,s)}});i(this,"setBrainMap",()=>{var t=document.getElementById(this.props.id+"bandview");this.class.updatePointsFromAtlas(this.bci.atlas.data.eeg,this.bci.atlas.data.eegshared.eegChannelTags);let e=.1;this.bci.devices[0]&&this.bci.devices[0].info.useFilters===!1&&(e=10),this.class.updateHeatmapFromAtlas(this.bci.atlas.data.eeg,this.bci.atlas.data.eegshared.eegChannelTags,t,e);let s=.1;this.bci.devices[0]&&this.bci.devices[0].info.useFilters===!1&&(s=10),this.class.updateConnectomeFromAtlas(this.bci.atlas.data.coherence,this.bci.atlas.data.eeg,this.bci.atlas.data.eegshared.eegChannelTags,t,!0,s)});this.bci=e,this.parentNode=t,this.settings=s,this.AppletHTML=null,this.props={id:String(Math.floor(Math.random()*1e6)),width:"300px",height:"300px"},this.class=null,this.loop=null,this.looping=!1}init(){let t=(s=this.props)=>`
            <div id='${s.id}' style="background: white;">
                <div style="position: absolute; z-index:3;">`+d(s.id+"bandview")+`</div>
                <canvas id='`+s.id+`canvas' width='100%' height='100%' style='position:absolute; width:100%; height:100%; z-index:1; '></canvas>
                <canvas id='`+s.id+`points' width='100%' height='100%' style='position:absolute; width:100%; height:100%; z-index:2; '></canvas>
            </div>
            `,e=(s=this.props)=>{document.getElementById(s.id+"bandview").onchange=()=>{this.setBrainMap()}};this.AppletHTML=new c(t,this.parentNode,this.props,e,void 0,"NEVER"),this.settings.length>0&&this.configure(this.settings),this.class=new o(this.props.id+"canvas",this.props.id+"points"),this.class.genHeatMap(),this.class.points=[],this.class.scale=this.AppletHTML.node.clientHeight*.5*.01*.8,this.bci.atlas.data.eeg.forEach((s,h)=>{this.class.points.push({x:s.position.x*this.class.scale+this.class.pointsCanvas.width*.5,y:this.class.pointsCanvas.height*.5-s.position.y*this.class.scale,size:90*this.class.scale,intensity:.8})}),this.class.updateHeatmap(),this.class.updatePointsFromAtlas(this.bci.atlas.data.eeg,this.bci.atlas.data.eegshared.eegChannelTags),this.looping=!0,this.updateLoop()}deinit(){this.looping=!1,this.class.deInit(),this.class=null,this.AppletHTML.deleteNode()}responsive(){var t=document.getElementById(this.props.id+"canvas"),e=document.getElementById(this.props.id+"points");t.style.height=this.AppletHTML.node.style.height,t.style.width=t.style.height,e.style.height=this.AppletHTML.node.style.height,e.style.width=e.style.height,t.height=this.AppletHTML.node.clientHeight,t.width=this.AppletHTML.node.clientHeight,e.height=this.AppletHTML.node.clientHeight,e.width=this.AppletHTML.node.clientHeight,this.class.scale=this.AppletHTML.node.clientHeight*.5*.01*.8,this.bci.atlas.settings.eeg===!0&&(this.class.genHeatMap(),this.class.points=[],this.bci.atlas.data.eeg.forEach((s,h)=>{this.class.points.push({x:s.position.x*this.class.scale+this.class.pointsCanvas.width*.5,y:this.class.pointsCanvas.height*.5-s.position.y*this.class.scale,size:90*this.class.scale,intensity:.8})}),this.class.updateHeatmap(),this.class.updatePointsFromAtlas(this.bci.atlas.data.eeg,this.bci.atlas.data.eegshared.eegChannelTags))}configure(t=[]){t.forEach((e,s)=>{})}}i(BrainMapApplet,"devices",["eeg"]);

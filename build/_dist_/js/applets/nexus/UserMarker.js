import*as t from"../../../../_snowpack/pkg/three.js";export class UserMarker{constructor(e){this.name=e.name,this.latitude=e.latitude,this.longitude=e.longitude,this.d=e.diameter,this.neurofeedbackDimensions=e.neurofeedbackDimensions,this.meshWidth=e.meshWidth,this.meshHeight=e.meshHeight,this.x=this.mercX(),this.y=this.mercY(),this.z=.05,this.geometry,this.material,this.marker,this.prevMarkers=[],this.prevGroups=[],this.createMarker(),this.createHTMLElement(),this.element=document.querySelector(`.nexus-point-${this.name}`),this.active=!1}createHTMLElement(){document.querySelector(".nexus-point-container").innerHTML+=`
    <div class="nexus-point nexus-point-${this.name}">
      <div class="nexus-label">${this.name}</div>
      <div class="nexus-text">${this.name} is down here. Scroll to zoom in and see.</div>
    </div>
    `}animateLabel(e,i){let s=new t.Vector3(this.x,this.y,this.z);s.distanceTo(new t.Vector3(e.position.x,e.position.y,e.position.z))>.1&&this.active?this.element.classList.add("visible"):this.element.classList.remove("visible"),s.project(e);let r=i.clientWidth*s.x*.5,h=-i.clientHeight*s.y*.5;this.element.style.transform=`translate(${r}px,${h}px)`}updateMesh(e,i){this.meshWidth=e,this.meshHeight=i,this.x=this.mercX(),this.y=this.mercY(),this.createMarker()}setLatitude(e){this.latitude=e,this.y=this.mercY(e)}setLongitude(e){this.longitude=e,this.x=this.mercX(e)}setGeolocation(e){this.setLatitude(e.latitude),this.setLongitude(e.longitude),this.createMarker()}createMarker(){this.marker!=null&&this.prevMarkers.push(this.marker),this.neurofeedbackGroup!=null&&this.prevGroups.push(this.neurofeedbackGroup),this.neurofeedbackGroup=new t.Group;let e=new t.MeshBasicMaterial({color:16777215,opacity:.5,transparent:!0});this.marker=new t.Mesh(new t.SphereGeometry(this.d,10,10),e),this.marker.position.set(this.x,this.y,this.z),this.marker.geometry.computeBoundingBox();let i=this.neurofeedbackDimensions.length,s=.01,a=new t.SphereGeometry(this.d/3,10,10),r=new t.MeshBasicMaterial({color:16711680,opacity:.5,transparent:!0});for(let h=0;h<i;h++){let n=new t.Mesh(a,r);n.position.set(s*Math.sin(h*2*Math.PI/i),s*Math.cos(h*2*Math.PI/i)),n.name=this.neurofeedbackDimensions[h],this.neurofeedbackGroup.add(n)}this.neurofeedbackGroup.position.set(this.x,this.y,this.z),this.active=!0}mercX(e=this.longitude){return(e+180)*(this.meshWidth/360)-this.meshWidth/2}mercY(e=this.latitude){return-(this.meshHeight/180*(90-e))+this.meshHeight/2}animateNeurofeedback(){}}

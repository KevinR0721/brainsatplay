var A=Object.defineProperty;var k=(p,s,l)=>(typeof s!="symbol"&&(s+=""),s in p?A(p,s,{enumerable:!0,configurable:!0,writable:!0,value:l}):p[s]=l);import{brainsatplay as z}from"../../brainsatplay.js";import{DOMFragment as F}from"../../frontend/utils/DOMFragment.js";import*as e from"../../../../_snowpack/pkg/three.js";import{OrbitControls as I}from"../../../../_snowpack/pkg/three/examples/jsm/controls/OrbitControls.js";import"../../../../_snowpack/pkg/three/examples/jsm/libs/stats.module.js";import N from"./shaders/blob/vertex.js";import D from"./shaders/blob/fragment.js";import{EffectComposer as O}from"../../../../_snowpack/pkg/three/examples/jsm/postprocessing/EffectComposer.js";import{RenderPass as U}from"../../../../_snowpack/pkg/three/examples/jsm/postprocessing/RenderPass.js";import"../../../../_snowpack/pkg/three/examples/jsm/postprocessing/GlitchPass.js";import"../../../../_snowpack/pkg/three/examples/jsm/shaders/RGBShiftShader.js";import"../../../../_snowpack/pkg/three/examples/jsm/postprocessing/ShaderPass.js";import{SMAAPass as q}from"../../../../_snowpack/pkg/three/examples/jsm/postprocessing/SMAAPass.js";import"../../../../_snowpack/pkg/three/examples/jsm/shaders/SobelOperatorShader.js";import{UnrealBloomPass as $}from"../../../../_snowpack/pkg/three/examples/jsm/postprocessing/UnrealBloomPass.js";import{gsap as V}from"../../../../_snowpack/pkg/gsap.js";import"../../../../_snowpack/pkg/three/examples/jsm/libs/dat.gui.module.js";import X from"./img/blobTexture.jpeg.proxy.js";export class BlobApplet{constructor(s=document.body,l=new z,c=[]){this.parentNode=s,this.settings=c,this.bci=l,this.AppletHTML=null,this.props={id:String(Math.floor(Math.random()*1e6))}}init(){let s=(t=this.props)=>`
            <div id='${t.id}' class="blob-wrapper" style='height:${t.height}; width:${t.width};'>
                <div id="blob-renderer-container"><canvas class="blob-webgl"></canvas></div>
                <div class="blob-gui-container"></div>
            </div>
            `,l=(t=this.props)=>{document.getElementById(t.id)};this.AppletHTML=new F(s,this.parentNode,this.props,l,void 0,"NEVER"),this.settings.length>0&&this.configure(this.settings);const c=new e.LoadingManager(()=>{V.delayedCall(.1,()=>{u.style.opacity="1",this.resizeBlob()})},(t,d,w)=>{}),K=new e.TextureLoader(c).load(X),r=document.getElementById(this.props.id);let u=document.querySelector("canvas.blob-webgl");const x=new e.Scene;let M=100;const o=new e.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.01,1e3);o.position.z=20;const i=new e.WebGLRenderer({canvas:u,alpha:!0});let R=1200,L=600;const Q=400,j=R/L;let S=o.position.z*o.getFilmHeight()/o.getFocalLength(),b=(S-1)*o.aspect,C=b/j;i.setSize(r.clientWidth,r.clientHeight),i.setPixelRatio(Math.min(window.devicePixelRatio,2)),document.getElementById("blob-renderer-container").appendChild(i.domElement),u=document.querySelector("canvas.blob-webgl");let f=null;i.getPixelRatio()===1&&i.capabilities.isWebGL2?f=e.WebGLMultisampleRenderTarget:f=e.WebGLRenderTarget;const H=new f(window.innerWidth,window.innerHeight,{minFilter:e.LinearFilter,maxFilter:e.LinearFilter,format:e.RGBAFormat,encoding:e.sRGBEncoding,type:e.HalfFloatType}),a=new O(i,H);a.setPixelRatio(Math.min(window.devicePixelRatio,2)),a.setSize(r.clientWidth,r.clientHeight);const T=new U(x,o);a.addPass(T);const P=new $;if(P.enabled=!0,P.radius=1,a.addPass(P),i.getPixelRatio()===1&&!i.capabilities.isWebGL2){const t=new q;a.addPass(t),console.log("Using SMAA")}const h=new I(o,i.domElement);h.screenSpacePanning=!0,h.enableDamping=!0,h.enabled=!1;const G=new e.SphereGeometry(M,Math.pow(2,6),Math.pow(2,6));let B=Date.now();var n=new function(){this.rPower=0,this.gPower=.85,this.bPower=1,this.alpha=1,this.noiseIntensity=.5,this.updateColor=function(){m.uniforms.uColor.value=[n.rPower,n.gPower,n.bPower,n.alpha]},this.updateNoise=function(){m.uniforms.uNoiseIntensity.value=n.noiseIntensity}};const m=new e.ShaderMaterial({vertexShader:N,fragmentShader:D,transparent:!0,blending:e.AdditiveBlending,uniforms:{uTime:{value:0},aspectRatio:{value:window.innerWidth/window.innerHeight},uColor:{value:[n.rPower,n.gPower,n.bPower,n.alpha]},uNoiseIntensity:{value:n.noiseIntensity}}}),v=new e.Mesh(G,m);x.add(v),this.resizeBlob=()=>{o.aspect=window.innerWidth/window.innerHeight,o.updateProjectionMatrix(),b=(S-1)*o.aspect,C=b/j,W(),i.setSize(r.clientWidth,r.clientHeight),i.setPixelRatio(Math.min(window.devicePixelRatio,2)),a.setPixelRatio(Math.min(window.devicePixelRatio,2)),a.setSize(r.clientWidth,r.clientHeight)},window.addEventListener("resize",this.resizeBlob,!1);function W(){let t=new e.SphereGeometry(5,32,32);v.geometry.dispose(),v.geometry=t}const E=(t="alpha1")=>{let d=null;if(this.bci.atlas.settings.coherence){let w=this.bci.atlas.data.coherence[0].means[t];w.length>0&&(d=1e3*w[w.length-1])}return d!=null?d:.5+Math.sin(Date.now()/1e4)/2};let _=.01,g=1;var y=()=>{setTimeout(function(){requestAnimationFrame(y)},1e3/60),m.uniforms.uTime.value=Date.now()-B;let d=E()-g;g=g+_*d,m.uniforms.uNoiseIntensity.value=1-g,h.update(),a.render()};y()}deinit(){this.AppletHTML.deleteNode()}responsive(){this.resizeBlob()}configure(s=[]){s.forEach((l,c)=>{})}}k(BlobApplet,"devices",["eeg"]);

var h=Object.defineProperty;var o=(r,e,t)=>(typeof e!="symbol"&&(e+=""),e in r?h(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t);export class EventSourceUtil{constructor(e="http://192.168.4.1/events",t=this.onOpen,n=this.onError,s=this.onMsg,i=[]){o(this,"onOpen",e=>{console.log("Events Connected!",e.data)});o(this,"onError",e=>{console.log("event source error:",e.data),e.target.readyState!==EventSource.OPEN&&console.log("Events Disconnected")});o(this,"onMsg",e=>{console.log("event source:",e.data)});o(this,"open",()=>{this.createEventListeners()});o(this,"close",()=>{this.removeEventListeners()});this.hostUrl=e,this.onOpen=t,this.onError=n,this.onMsg=s,this.source=null,this.customCallbacks=i,this.createEventListeners(e,custom)}createEventListeners(e=this.hostUrl,t=this.customCallbacks,n=this.source){n!==null&&this.removeEventListeners(t,n),window.EventSource&&(n=new EventSource(e),n.addEventListener("open",this.onOpen,!1),n.addEventListener("error",this.onError,!1),n.addEventListener("message",this.onMsg,!1),t.length>0&&t.forEach((s,i)=>{n.addEventListener(s.tag,s.callback,!1)}))}removeEventListeners(e=this.custom,t=this.source){window.EventSource&&(t.close(),t.removeEventListener("open",this.openEvent,!1),t.removeEventListener("error",this.errorEvent,!1),t.removeEventListener("message",this.messageEvent,!1),e.length>0&&e.forEach((n,s)=>{t.removeEventListener(n.tag,n.callback,!1)}),t=null)}newPostFunction(e="post",t=this.hostUrl){const n=(s=void 0,i=void 0,v=void 0)=>{var a=new XMLHttpRequest;a.open("POST",t,!0,i,v),a.send(s),a.onerror=function(){a.abort()}};return this[e]=n,n}}

var p=Object.defineProperty;var c=(l,e,t)=>(typeof e!="symbol"&&(e+=""),e in l?p(l,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[e]=t);const d=require("serialport");console.log(d);export class nodeSerial{constructor(e=!0,t="serialmenu",n="serialmonitor"){c(this,"onGetDevices",(e,t)=>{document.getElementById("serialports").innerHTML="";for(var n=[],s=0;s<e.length;s++)console.log(e[s].path);e.forEach(o=>{var i=o.displayName+"("+o.path+")";if(console.log("displayName "+i),i||(i=o.path),n.push({option:i,value:o.path}),console.log(this.defaultUI),this.defaultUI==!0){var r=document.createElement("option");r.text=i,r.value=o.path,console.log("option",r),document.getElementById("serialports").appendChild(r)}}),this.displayPorts=n});c(this,"onReceive",e=>{var t=new Uint8Array(e.data),n=String.fromCharCode.apply(null,t);this.encodedBuffer+=decodeURIComponent(escape(n));for(var s;(s=this.encodedBuffer.indexOf(`
`))>=0;){var o=this.encodedBuffer.substr(0,s+1);this.recordData==!0&&this.recorded.push(o),(this.monitoring=!0)&&(this.newSamples++,this.monitorData.push(o)),this.onReadLine(o),this.encodedBuffer=this.encodedBuffer.substr(s+1)}});c(this,"onConnectComplete",()=>{this.connectionId=this.serialPort.path,console.log("Connected! ID:",this.connectionId),this.serialPort.on("data",this.onReceive),this.serialPort.on("error",this.onReceiveError),this.seriealPort.on("close",this.onDisconnect),this.finalCallback()});this.displayPorts=[],this.defaultUI=e,this.serialPort=null,this.encodedBuffer="",this.connectionId=-1,this.recordData=!1,this.recorded=[],this.monitoring=!1,this.newSamples=0,this.monitorSamples=1e4,this.monitorData=[],this.monitorIdx=0,d?(e==!0&&this.setupSelect(t),this.setupSerial()):console.log("ERROR: Cannot locate npm serial port.")}setupSelect(e){var t=document.createElement("select");t.setAttribute("id","serialports");var n=document.createDocumentFragment();n.appendChild(t),document.getElementById(e).innerHTML='<button id="refreshSerial">Get</button><button id="connectSerial">Set</button>',document.getElementById(e).appendChild(n),document.getElementById("refreshSerial").onclick=()=>{this.setupSerial()},document.getElementById("connectSerial").onclick=()=>{this.connectionId!=-1&&this.connectSelected(!1),this.connectSelected(!0,document.getElementById("serialports").value)}}setupMonitor(e){this.monitorData.length>this.monitorSamples&&this.monitorData.splice(0,this.monitorData.length-this.monitorSamples);var t=document.createElement("div");t.setAttribute("id","streamMonitor"),this.monitorData.forEach((o,i)=>{t.innerHTML+="<div id="+this.monitorIdx+">"+o+"</div>",this.monitorIdx++}),this.newSamples=0;var n=document.createDocumentFragment();n.appendChild(t),document.getElementById(e).appendChild(n);var s=()=>{if(this.newSamples>0){if(this.monitorData.length>this.monitorSamples){for(var o=this.monitorIdx-this.monitorSamples-(this.monitorData.length-this.monitorSamples);o>this.monitorIdx-this.monitorSamples;o++)document.getElementById(o).remove();this.monitorData.splice(0,this.monitorData.length-this.monitorSamples)}for(var o=0;o<newSamples;o++){var i=document.createElement("div");i.innerHTML='<div id="'+this.monitorIdx+'">'+this.monitorData[this.monitorData.length-1-o]+"</div>";var r=document.createDocumentFragment();r.appendChild(i),document.getElementById(e).appendChild(r),this.monitorIdx++;var a=document.getElementById("streamMonitor");a.scrollTop=a.scrollHeight}setTimeout(requestAnimationFrame(s),15)}};requestAnimationFrame(s)}onReceiveError(e){console.log("onReceiveError"),console.log("Error from ID:",e.connectionId),this.onError.dispatch(e.error),console.log("Error: "+e.error)}finalCallback(){console.log("USB device Ready!")}sendMessage(e){e+=`
`,this.connectionId>-1?(this.serialPort.write(Buffer.from(e),this.onSendCallback),console.log("Send message:",e)):console.log("Device is disconnected!")}onSendCallback(e){console.log("sendInfo",e)}onReadLine(e){console.log(e)}connectSelected(e=!0,t="",n=115200){e==!0&&t!=""?(console.log("Connecting",t),this.serialPort=new d(t,{baudrate:n},this.onConnectComplete)):(console.log("Disconnect"+t),this.serialPort!==null&&(this.encodedBuffer="",this.serialPort.flush(function(){console.log("Flush ",this.connectionId)}),this.serialPort.close(function(){console.log("Serial disconnect",this.connectionId),this.onDisconnect()})))}disconnect(){this.serialPort.close(this.onDisconnect())}onDisconnect(){this.connectionId=-1,this.serialPort=null,console.log("Disconnected from serial device")}setupSerial(){d.list().then(this.onGetDevices)}saveCsv(e=this.recorded,t=new Date().toISOString(),n="|",s=`Header
`){var o=s;e.forEach(r=>{o+=r.split(n).join(",")+`
`});var i=document.createElement("a");i.href="data:text/csv;charset=utf-8,"+encodeURI(o),i.target="_blank",t!=""?i.download=t+".csv":i.download=new Date().toISOString()+".csv",i.click()}openFile(e=","){var t=document.createElement("input");t.type="file",t.onchange=n=>{this.csvDat=[];var s=n.target.files[0],o=new FileReader;o.readAsText(s),o.onload=i=>{var r=i.target.result,a=r.split(`
`);a.pop(),a.forEach((h,u)=>{if(u==0)var m=h.split(e);else{var m=h.split(e);this.csvDat.push(m)}}),this.onOpen()},t.value=""},t.click()}onOpen(){alert("CSV Opened!")}}

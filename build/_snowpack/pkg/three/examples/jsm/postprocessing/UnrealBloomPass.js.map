{"version":3,"file":"UnrealBloomPass.js","sources":["../../../../../../../node_modules/three/examples/jsm/shaders/LuminosityHighPassShader.js","../../../../../../../node_modules/three/examples/jsm/postprocessing/UnrealBloomPass.js"],"sourcesContent":["import {\n\tColor\n} from '../../../build/three.module.js';\n\n/**\n * Luminosity\n * http://en.wikipedia.org/wiki/Luminosity\n */\n\nvar LuminosityHighPassShader = {\n\n\tshaderID: 'luminosityHighPass',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'luminosityThreshold': { value: 1.0 },\n\t\t'smoothWidth': { value: 1.0 },\n\t\t'defaultColor': { value: new Color( 0x000000 ) },\n\t\t'defaultOpacity': { value: 0.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\n\t\t'\tvUv = uv;',\n\n\t\t'\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n\t\t'}'\n\n\t].join( '\\n' ),\n\n\tfragmentShader: [\n\n\t\t'uniform sampler2D tDiffuse;',\n\t\t'uniform vec3 defaultColor;',\n\t\t'uniform float defaultOpacity;',\n\t\t'uniform float luminosityThreshold;',\n\t\t'uniform float smoothWidth;',\n\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\n\t\t'\tvec4 texel = texture2D( tDiffuse, vUv );',\n\n\t\t'\tvec3 luma = vec3( 0.299, 0.587, 0.114 );',\n\n\t\t'\tfloat v = dot( texel.xyz, luma );',\n\n\t\t'\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );',\n\n\t\t'\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );',\n\n\t\t'\tgl_FragColor = mix( outputColor, texel, alpha );',\n\n\t\t'}'\n\n\t].join( '\\n' )\n\n};\n\nexport { LuminosityHighPassShader };\n","import {\n\tAdditiveBlending,\n\tColor,\n\tLinearFilter,\n\tMeshBasicMaterial,\n\tRGBAFormat,\n\tShaderMaterial,\n\tUniformsUtils,\n\tVector2,\n\tVector3,\n\tWebGLRenderTarget\n} from '../../../build/three.module.js';\nimport { Pass } from '../postprocessing/Pass.js';\nimport { CopyShader } from '../shaders/CopyShader.js';\nimport { LuminosityHighPassShader } from '../shaders/LuminosityHighPassShader.js';\n\n/**\n * UnrealBloomPass is inspired by the bloom pass of Unreal Engine. It creates a\n * mip map chain of bloom textures and blurs them with different radii. Because\n * of the weighted combination of mips, and because larger blurs are done on\n * higher mips, this effect provides good quality and performance.\n *\n * Reference:\n * - https://docs.unrealengine.com/latest/INT/Engine/Rendering/PostProcessEffects/Bloom/\n */\nvar UnrealBloomPass = function ( resolution, strength, radius, threshold ) {\n\n\tPass.call( this );\n\n\tthis.strength = ( strength !== undefined ) ? strength : 1;\n\tthis.radius = radius;\n\tthis.threshold = threshold;\n\tthis.resolution = ( resolution !== undefined ) ? new Vector2( resolution.x, resolution.y ) : new Vector2( 256, 256 );\n\n\t// create color only once here, reuse it later inside the render function\n\tthis.clearColor = new Color( 0, 0, 0 );\n\n\t// render targets\n\tvar pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\tthis.renderTargetsHorizontal = [];\n\tthis.renderTargetsVertical = [];\n\tthis.nMips = 5;\n\tvar resx = Math.round( this.resolution.x / 2 );\n\tvar resy = Math.round( this.resolution.y / 2 );\n\n\tthis.renderTargetBright = new WebGLRenderTarget( resx, resy, pars );\n\tthis.renderTargetBright.texture.name = 'UnrealBloomPass.bright';\n\tthis.renderTargetBright.texture.generateMipmaps = false;\n\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\tvar renderTargetHorizonal = new WebGLRenderTarget( resx, resy, pars );\n\n\t\trenderTargetHorizonal.texture.name = 'UnrealBloomPass.h' + i;\n\t\trenderTargetHorizonal.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsHorizontal.push( renderTargetHorizonal );\n\n\t\tvar renderTargetVertical = new WebGLRenderTarget( resx, resy, pars );\n\n\t\trenderTargetVertical.texture.name = 'UnrealBloomPass.v' + i;\n\t\trenderTargetVertical.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsVertical.push( renderTargetVertical );\n\n\t\tresx = Math.round( resx / 2 );\n\n\t\tresy = Math.round( resy / 2 );\n\n\t}\n\n\t// luminosity high pass material\n\n\tif ( LuminosityHighPassShader === undefined )\n\t\tconsole.error( 'THREE.UnrealBloomPass relies on LuminosityHighPassShader' );\n\n\tvar highPassShader = LuminosityHighPassShader;\n\tthis.highPassUniforms = UniformsUtils.clone( highPassShader.uniforms );\n\n\tthis.highPassUniforms[ 'luminosityThreshold' ].value = threshold;\n\tthis.highPassUniforms[ 'smoothWidth' ].value = 0.01;\n\n\tthis.materialHighPassFilter = new ShaderMaterial( {\n\t\tuniforms: this.highPassUniforms,\n\t\tvertexShader: highPassShader.vertexShader,\n\t\tfragmentShader: highPassShader.fragmentShader,\n\t\tdefines: {}\n\t} );\n\n\t// Gaussian Blur Materials\n\tthis.separableBlurMaterials = [];\n\tvar kernelSizeArray = [ 3, 5, 7, 9, 11 ];\n\tvar resx = Math.round( this.resolution.x / 2 );\n\tvar resy = Math.round( this.resolution.y / 2 );\n\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\tthis.separableBlurMaterials.push( this.getSeperableBlurMaterial( kernelSizeArray[ i ] ) );\n\n\t\tthis.separableBlurMaterials[ i ].uniforms[ 'texSize' ].value = new Vector2( resx, resy );\n\n\t\tresx = Math.round( resx / 2 );\n\n\t\tresy = Math.round( resy / 2 );\n\n\t}\n\n\t// Composite material\n\tthis.compositeMaterial = this.getCompositeMaterial( this.nMips );\n\tthis.compositeMaterial.uniforms[ 'blurTexture1' ].value = this.renderTargetsVertical[ 0 ].texture;\n\tthis.compositeMaterial.uniforms[ 'blurTexture2' ].value = this.renderTargetsVertical[ 1 ].texture;\n\tthis.compositeMaterial.uniforms[ 'blurTexture3' ].value = this.renderTargetsVertical[ 2 ].texture;\n\tthis.compositeMaterial.uniforms[ 'blurTexture4' ].value = this.renderTargetsVertical[ 3 ].texture;\n\tthis.compositeMaterial.uniforms[ 'blurTexture5' ].value = this.renderTargetsVertical[ 4 ].texture;\n\tthis.compositeMaterial.uniforms[ 'bloomStrength' ].value = strength;\n\tthis.compositeMaterial.uniforms[ 'bloomRadius' ].value = 0.1;\n\tthis.compositeMaterial.needsUpdate = true;\n\n\tvar bloomFactors = [ 1.0, 0.8, 0.6, 0.4, 0.2 ];\n\tthis.compositeMaterial.uniforms[ 'bloomFactors' ].value = bloomFactors;\n\tthis.bloomTintColors = [ new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ),\n\t\t\t\t\t\t\t new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ) ];\n\tthis.compositeMaterial.uniforms[ 'bloomTintColors' ].value = this.bloomTintColors;\n\n\t// copy material\n\tif ( CopyShader === undefined ) {\n\n\t\tconsole.error( 'THREE.UnrealBloomPass relies on CopyShader' );\n\n\t}\n\n\tvar copyShader = CopyShader;\n\n\tthis.copyUniforms = UniformsUtils.clone( copyShader.uniforms );\n\tthis.copyUniforms[ 'opacity' ].value = 1.0;\n\n\tthis.materialCopy = new ShaderMaterial( {\n\t\tuniforms: this.copyUniforms,\n\t\tvertexShader: copyShader.vertexShader,\n\t\tfragmentShader: copyShader.fragmentShader,\n\t\tblending: AdditiveBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false,\n\t\ttransparent: true\n\t} );\n\n\tthis.enabled = true;\n\tthis.needsSwap = false;\n\n\tthis._oldClearColor = new Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.basic = new MeshBasicMaterial();\n\n\tthis.fsQuad = new Pass.FullScreenQuad( null );\n\n};\n\nUnrealBloomPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: UnrealBloomPass,\n\n\tdispose: function () {\n\n\t\tfor ( var i = 0; i < this.renderTargetsHorizontal.length; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].dispose();\n\n\t\t}\n\n\t\tfor ( var i = 0; i < this.renderTargetsVertical.length; i ++ ) {\n\n\t\t\tthis.renderTargetsVertical[ i ].dispose();\n\n\t\t}\n\n\t\tthis.renderTargetBright.dispose();\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tvar resx = Math.round( width / 2 );\n\t\tvar resy = Math.round( height / 2 );\n\n\t\tthis.renderTargetBright.setSize( resx, resy );\n\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].setSize( resx, resy );\n\t\t\tthis.renderTargetsVertical[ i ].setSize( resx, resy );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'texSize' ].value = new Vector2( resx, resy );\n\n\t\t\tresx = Math.round( resx / 2 );\n\t\t\tresy = Math.round( resy / 2 );\n\n\t\t}\n\n\t},\n\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\n\n\t\trenderer.getClearColor( this._oldClearColor );\n\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setClearColor( this.clearColor, 0 );\n\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( false );\n\n\t\t// Render input to screen\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\tthis.fsQuad.material = this.basic;\n\t\t\tthis.basic.map = readBuffer.texture;\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// 1. Extract Bright Areas\n\n\t\tthis.highPassUniforms[ 'tDiffuse' ].value = readBuffer.texture;\n\t\tthis.highPassUniforms[ 'luminosityThreshold' ].value = this.threshold;\n\t\tthis.fsQuad.material = this.materialHighPassFilter;\n\n\t\trenderer.setRenderTarget( this.renderTargetBright );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// 2. Blur All the mips progressively\n\n\t\tvar inputRenderTarget = this.renderTargetBright;\n\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.fsQuad.material = this.separableBlurMaterials[ i ];\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'colorTexture' ].value = inputRenderTarget.texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'direction' ].value = UnrealBloomPass.BlurDirectionX;\n\t\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'colorTexture' ].value = this.renderTargetsHorizontal[ i ].texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'direction' ].value = UnrealBloomPass.BlurDirectionY;\n\t\t\trenderer.setRenderTarget( this.renderTargetsVertical[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tinputRenderTarget = this.renderTargetsVertical[ i ];\n\n\t\t}\n\n\t\t// Composite All the mips\n\n\t\tthis.fsQuad.material = this.compositeMaterial;\n\t\tthis.compositeMaterial.uniforms[ 'bloomStrength' ].value = this.strength;\n\t\tthis.compositeMaterial.uniforms[ 'bloomRadius' ].value = this.radius;\n\t\tthis.compositeMaterial.uniforms[ 'bloomTintColors' ].value = this.bloomTintColors;\n\n\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ 0 ] );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// Blend it additively over the input texture\n\n\t\tthis.fsQuad.material = this.materialCopy;\n\t\tthis.copyUniforms[ 'tDiffuse' ].value = this.renderTargetsHorizontal[ 0 ].texture;\n\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( true );\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( readBuffer );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// Restore renderer settings\n\n\t\trenderer.setClearColor( this._oldClearColor, this.oldClearAlpha );\n\t\trenderer.autoClear = oldAutoClear;\n\n\t},\n\n\tgetSeperableBlurMaterial: function ( kernelRadius ) {\n\n\t\treturn new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t'KERNEL_RADIUS': kernelRadius,\n\t\t\t\t'SIGMA': kernelRadius\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t'colorTexture': { value: null },\n\t\t\t\t'texSize': { value: new Vector2( 0.5, 0.5 ) },\n\t\t\t\t'direction': { value: new Vector2( 0.5, 0.5 ) }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t'varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}',\n\n\t\t\tfragmentShader:\n\t\t\t\t'#include <common>\\\n\t\t\t\tvarying vec2 vUv;\\n\\\n\t\t\t\tuniform sampler2D colorTexture;\\n\\\n\t\t\t\tuniform vec2 texSize;\\\n\t\t\t\tuniform vec2 direction;\\\n\t\t\t\t\\\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\\\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\\\n\t\t\t\t}\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\\\n\t\t\t\t\tfloat fSigma = float(SIGMA);\\\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\\\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\\\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\\\n\t\t\t\t\t\tfloat x = float(i);\\\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\\\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\\\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\\\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\\\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\\\n\t\t\t\t\t\tweightSum += 2.0 * w;\\\n\t\t\t\t\t}\\\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\\n\\\n\t\t\t\t}'\n\t\t} );\n\n\t},\n\n\tgetCompositeMaterial: function ( nMips ) {\n\n\t\treturn new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t'NUM_MIPS': nMips\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t'blurTexture1': { value: null },\n\t\t\t\t'blurTexture2': { value: null },\n\t\t\t\t'blurTexture3': { value: null },\n\t\t\t\t'blurTexture4': { value: null },\n\t\t\t\t'blurTexture5': { value: null },\n\t\t\t\t'dirtTexture': { value: null },\n\t\t\t\t'bloomStrength': { value: 1.0 },\n\t\t\t\t'bloomFactors': { value: null },\n\t\t\t\t'bloomTintColors': { value: null },\n\t\t\t\t'bloomRadius': { value: 0.0 }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t'varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}',\n\n\t\t\tfragmentShader:\n\t\t\t\t'varying vec2 vUv;\\\n\t\t\t\tuniform sampler2D blurTexture1;\\\n\t\t\t\tuniform sampler2D blurTexture2;\\\n\t\t\t\tuniform sampler2D blurTexture3;\\\n\t\t\t\tuniform sampler2D blurTexture4;\\\n\t\t\t\tuniform sampler2D blurTexture5;\\\n\t\t\t\tuniform sampler2D dirtTexture;\\\n\t\t\t\tuniform float bloomStrength;\\\n\t\t\t\tuniform float bloomRadius;\\\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\\\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\\\n\t\t\t\t\\\n\t\t\t\tfloat lerpBloomFactor(const in float factor) { \\\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\\\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\\\n\t\t\t\t}\\\n\t\t\t\t\\\n\t\t\t\tvoid main() {\\\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\\\n\t\t\t\t}'\n\t\t} );\n\n\t}\n\n} );\n\nUnrealBloomPass.BlurDirectionX = new Vector2( 1.0, 0.0 );\nUnrealBloomPass.BlurDirectionY = new Vector2( 0.0, 1.0 );\n\nexport { UnrealBloomPass };\n"],"names":[],"mappings":"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"}
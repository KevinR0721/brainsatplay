{"version":3,"file":"uplot.js","sources":["../../../node_modules/uplot/dist/uPlot.esm.js"],"sourcesContent":["/**\n* Copyright (c) 2020, Leon Sorokin\n* All rights reserved. (MIT Licensed)\n*\n* uPlot.js (Î¼Plot)\n* A small, fast chart for time series, lines, areas, ohlc & bars\n* https://github.com/leeoniya/uPlot (v1.4.0)\n*/\n\nfunction debounce(fn, time) {\n\tlet pending = null;\n\n\tfunction run() {\n\t\tpending = null;\n\t\tfn();\n\t}\n\n\treturn function() {\n\t\tclearTimeout(pending);\n\t\tpending = setTimeout(run, time);\n\t}\n}\n\n// binary search for index of closest value\nfunction closestIdx(num, arr, lo, hi) {\n\tlet mid;\n\tlo = lo || 0;\n\thi = hi || arr.length - 1;\n\tlet bitwise = hi <= 2147483647;\n\n\twhile (hi - lo > 1) {\n\t\tmid = bitwise ? (lo + hi) >> 1 : floor((lo + hi) / 2);\n\n\t\tif (arr[mid] < num)\n\t\t\tlo = mid;\n\t\telse\n\t\t\thi = mid;\n\t}\n\n\tif (num - arr[lo] <= arr[hi] - num)\n\t\treturn lo;\n\n\treturn hi;\n}\n\nfunction getMinMax(data, _i0, _i1, sorted) {\n//\tconsole.log(\"getMinMax()\");\n\n\tlet _min = inf;\n\tlet _max = -inf;\n\n\tif (sorted == 1) {\n\t\t_min = data[_i0];\n\t\t_max = data[_i1];\n\t}\n\telse if (sorted == -1) {\n\t\t_min = data[_i1];\n\t\t_max = data[_i0];\n\t}\n\telse {\n\t\tfor (let i = _i0; i <= _i1; i++) {\n\t\t\tif (data[i] != null) {\n\t\t\t\t_min = min(_min, data[i]);\n\t\t\t\t_max = max(_max, data[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [_min, _max];\n}\n\nconst _fixedTuple = [0, 0];\n\nfunction fixIncr(minIncr, maxIncr, minExp, maxExp) {\n\t_fixedTuple[0] = minExp < 0 ? roundDec(minIncr, -minExp) : minIncr;\n\t_fixedTuple[1] = maxExp < 0 ? roundDec(maxIncr, -maxExp) : maxIncr;\n\treturn _fixedTuple;\n}\n\nfunction rangeLog(min, max, base, fullMags) {\n\tlet logFn = base == 10 ? log10 : log2;\n\n\tif (min == max) {\n\t\tmin /= base;\n\t\tmax *= base;\n\t}\n\n\tlet minExp, maxExp, minMaxIncrs;\n\n\tif (fullMags) {\n\t\tminExp = floor(logFn(min));\n\t\tmaxExp =  ceil(logFn(max));\n\n\t\tminMaxIncrs = fixIncr(pow(base, minExp), pow(base, maxExp), minExp, maxExp);\n\n\t\tmin = minMaxIncrs[0];\n\t\tmax = minMaxIncrs[1];\n\t}\n\telse {\n\t\tminExp = floor(logFn(min));\n\t\tmaxExp = floor(logFn(max));\n\n\t\tminMaxIncrs = fixIncr(pow(base, minExp), pow(base, maxExp), minExp, maxExp);\n\n\t\tmin = incrRoundDn(min, minMaxIncrs[0]);\n\t\tmax = incrRoundUp(max, minMaxIncrs[1]);\n\t}\n\n\treturn [min, max];\n}\n\nconst _eqRangePart = {\n\tpad:  0,\n\tsoft: null,\n\tmode: 0,\n};\n\nconst _eqRange = {\n\tmin: _eqRangePart,\n\tmax: _eqRangePart,\n};\n\n// this ensures that non-temporal/numeric y-axes get multiple-snapped padding added above/below\n// TODO: also account for incrs when snapping to ensure top of axis gets a tick & value\nfunction rangeNum(_min, _max, mult, extra) {\n\tif (isObj(mult))\n\t\treturn _rangeNum(_min, _max, mult);\n\n\t_eqRangePart.pad  = mult;\n\t_eqRangePart.soft = extra ? 0 : null;\n\t_eqRangePart.mode = extra ? 2 : 0;\n\n\treturn _rangeNum(_min, _max, _eqRange);\n}\n\n// nullish coalesce\nfunction ifNull(lh, rh) {\n\treturn lh == null ? rh : lh;\n}\n\nfunction _rangeNum(_min, _max, cfg) {\n\tlet cmin = cfg.min;\n\tlet cmax = cfg.max;\n\n\tlet padMin = ifNull(cmin.pad, 0);\n\tlet padMax = ifNull(cmax.pad, 0);\n\n\tlet hardMin = ifNull(cmin.hard, -inf);\n\tlet hardMax = ifNull(cmax.hard,  inf);\n\n\tlet softMin = ifNull(cmin.soft,  inf);\n\tlet softMax = ifNull(cmax.soft, -inf);\n\n\tlet softMinMode = ifNull(cmin.mode, 0);\n\tlet softMaxMode = ifNull(cmax.mode, 0);\n\n\tlet delta        = _max - _min;\n\tlet nonZeroDelta = delta || abs(_max) || 1e3;\n\tlet mag          = log10(nonZeroDelta);\n\tlet base         = pow(10, floor(mag));\n\n\tlet _padMin  = nonZeroDelta * (delta == 0 ? (_min == 0 ? .1 : 1) : padMin);\n\tlet _newMin  = roundDec(incrRoundDn(_min - _padMin, base/100), 6);\n\tlet _softMin = _min >= softMin && (softMinMode == 1 || softMinMode == 2 && _newMin < softMin) ? softMin : inf;\n\tlet minLim   = max(hardMin, _newMin < _softMin && _min >= _softMin ? _softMin : min(_softMin, _newMin));\n\n\tlet _padMax  = nonZeroDelta * (delta == 0 ? (_max == 0 ? .1 : 1) : padMax);\n\tlet _newMax  = roundDec(incrRoundUp(_max + _padMax, base/100), 6);\n\tlet _softMax = _max <= softMax && (softMaxMode == 1 || softMaxMode == 2 && _newMax > softMax) ? softMax : -inf;\n\tlet maxLim   = min(hardMax, _newMax > _softMax && _max <= _softMax ? _softMax : max(_softMax, _newMax));\n\n\tif (minLim == maxLim && minLim == 0)\n\t\tmaxLim = 100;\n\n\treturn [minLim, maxLim];\n}\n\n// alternative: https://stackoverflow.com/a/2254896\nconst fmtNum = new Intl.NumberFormat(navigator.language).format;\n\nconst M = Math;\n\nconst abs = M.abs;\nconst floor = M.floor;\nconst round = M.round;\nconst ceil = M.ceil;\nconst min = M.min;\nconst max = M.max;\nconst pow = M.pow;\nconst log10 = M.log10;\nconst log2 = M.log2;\nconst PI = M.PI;\n\nconst inf = Infinity;\n\nfunction incrRound(num, incr) {\n\treturn round(num/incr)*incr;\n}\n\nfunction clamp(num, _min, _max) {\n\treturn min(max(num, _min), _max);\n}\n\nfunction fnOrSelf(v) {\n\treturn typeof v == \"function\" ? v : () => v;\n}\n\nfunction retArg1(_0, _1) {\n\treturn _1;\n}\n\nfunction incrRoundUp(num, incr) {\n\treturn ceil(num/incr)*incr;\n}\n\nfunction incrRoundDn(num, incr) {\n\treturn floor(num/incr)*incr;\n}\n\nfunction roundDec(val, dec) {\n\treturn round(val * (dec = 10**dec)) / dec;\n}\n\nconst fixedDec = new Map();\n\nfunction guessDec(num) {\n\treturn ((\"\"+num).split(\".\")[1] || \"\").length;\n}\n\nfunction genIncrs(base, minExp, maxExp, mults) {\n\tlet incrs = [];\n\n\tlet multDec = mults.map(guessDec);\n\n\tfor (let exp = minExp; exp < maxExp; exp++) {\n\t\tlet expa = abs(exp);\n\t\tlet mag = roundDec(pow(base, exp), expa);\n\n\t\tfor (let i = 0; i < mults.length; i++) {\n\t\t\tlet _incr = mults[i] * mag;\n\t\t\tlet dec = (_incr >= 0 && exp >= 0 ? 0 : expa) + (exp >= multDec[i] ? 0 : multDec[i]);\n\t\t\tlet incr = roundDec(_incr, dec);\n\t\t\tincrs.push(incr);\n\t\t\tfixedDec.set(incr, dec);\n\t\t}\n\t}\n\n\treturn incrs;\n}\n\n//export const assign = Object.assign;\n\nconst EMPTY_OBJ = {};\n\nconst isArr = Array.isArray;\n\nfunction isStr(v) {\n\treturn typeof v === 'string';\n}\n\nfunction isObj(v) {\n\treturn typeof v === 'object' && v !== null;\n}\n\nfunction copy(o) {\n\tlet out;\n\n\tif (isArr(o))\n\t\tout = o.map(copy);\n\telse if (isObj(o)) {\n\t\tout = {};\n\t\tfor (var k in o)\n\t\t\tout[k] = copy(o[k]);\n\t}\n\telse\n\t\tout = o;\n\n\treturn out;\n}\n\nfunction assign(targ) {\n\tlet args = arguments;\n\n\tfor (let i = 1; i < args.length; i++) {\n\t\tlet src = args[i];\n\n\t\tfor (let key in src) {\n\t\t\tif (isObj(targ[key]))\n\t\t\t\tassign(targ[key], copy(src[key]));\n\t\t\telse\n\t\t\t\ttarg[key] = copy(src[key]);\n\t\t}\n\t}\n\n\treturn targ;\n}\n\nconst microTask = typeof queueMicrotask == \"undefined\" ? fn => Promise.resolve().then(fn) : queueMicrotask;\n\nconst WIDTH = \"width\";\nconst HEIGHT = \"height\";\nconst TOP = \"top\";\nconst BOTTOM = \"bottom\";\nconst LEFT = \"left\";\nconst RIGHT = \"right\";\nconst firstChild = \"firstChild\";\nconst createElement = \"createElement\";\nconst hexBlack = \"#000\";\nconst transparent = hexBlack + \"0\";\nconst classList = \"classList\";\n\nconst mousemove = \"mousemove\";\nconst mousedown = \"mousedown\";\nconst mouseup = \"mouseup\";\nconst mouseenter = \"mouseenter\";\nconst mouseleave = \"mouseleave\";\nconst dblclick = \"dblclick\";\nconst resize = \"resize\";\nconst scroll = \"scroll\";\n\nconst pre = \"u-\";\n\nconst UPLOT          =       \"uplot\";\nconst TITLE          = pre + \"title\";\nconst WRAP           = pre + \"wrap\";\nconst UNDER          = pre + \"under\";\nconst OVER           = pre + \"over\";\nconst OFF            = pre + \"off\";\nconst SELECT         = pre + \"select\";\nconst CURSOR_X       = pre + \"cursor-x\";\nconst CURSOR_Y       = pre + \"cursor-y\";\nconst CURSOR_PT      = pre + \"cursor-pt\";\nconst LEGEND         = pre + \"legend\";\nconst LEGEND_LIVE    = pre + \"live\";\nconst LEGEND_INLINE  = pre + \"inline\";\nconst LEGEND_THEAD   = pre + \"thead\";\nconst LEGEND_SERIES  = pre + \"series\";\nconst LEGEND_MARKER  = pre + \"marker\";\nconst LEGEND_LABEL   = pre + \"label\";\nconst LEGEND_VALUE   = pre + \"value\";\n\nconst rAF = requestAnimationFrame;\nconst doc = document;\nconst win = window;\nconst pxRatio = devicePixelRatio;\n\nfunction addClass(el, c) {\n\tc != null && el[classList].add(c);\n}\n\nfunction remClass(el, c) {\n\tel[classList].remove(c);\n}\n\nfunction setStylePx(el, name, value) {\n\tel.style[name] = value + \"px\";\n}\n\nfunction placeTag(tag, cls, targ, refEl) {\n\tlet el = doc[createElement](tag);\n\n\tif (cls != null)\n\t\taddClass(el, cls);\n\n\tif (targ != null)\n\t\ttarg.insertBefore(el, refEl);\n\n\treturn el;\n}\n\nfunction placeDiv(cls, targ) {\n\treturn placeTag(\"div\", cls, targ);\n}\n\nfunction trans(el, xPos, yPos, xMax, yMax) {\n\tel.style.transform = \"translate(\" + xPos + \"px,\" + yPos + \"px)\";\n\n\tif (xPos < 0 || yPos < 0 || xPos > xMax || yPos > yMax)\n\t\taddClass(el, OFF);\n\telse\n\t\tremClass(el, OFF);\n}\n\nconst evOpts = {passive: true};\n\nfunction on(ev, el, cb) {\n\tel.addEventListener(ev, cb, evOpts);\n}\n\nfunction off(ev, el, cb) {\n\tel.removeEventListener(ev, cb, evOpts);\n}\n\nconst months = [\n\t\"January\",\n\t\"February\",\n\t\"March\",\n\t\"April\",\n\t\"May\",\n\t\"June\",\n\t\"July\",\n\t\"August\",\n\t\"September\",\n\t\"October\",\n\t\"November\",\n\t\"December\",\n];\n\nconst days = [\n\t\"Sunday\",\n\t\"Monday\",\n\t\"Tuesday\",\n\t\"Wednesday\",\n\t\"Thursday\",\n\t\"Friday\",\n\t\"Saturday\",\n];\n\nfunction slice3(str) {\n\treturn str.slice(0, 3);\n}\n\nconst days3 =  days.map(slice3);\n\nconst months3 =  months.map(slice3);\n\nconst engNames = {\n\tMMMM: months,\n\tMMM:  months3,\n\tWWWW: days,\n\tWWW:  days3,\n};\n\nfunction zeroPad2(int) {\n\treturn (int < 10 ? '0' : '') + int;\n}\n\nfunction zeroPad3(int) {\n\treturn (int < 10 ? '00' : int < 100 ? '0' : '') + int;\n}\n\n/*\nfunction suffix(int) {\n\tlet mod10 = int % 10;\n\n\treturn int + (\n\t\tmod10 == 1 && int != 11 ? \"st\" :\n\t\tmod10 == 2 && int != 12 ? \"nd\" :\n\t\tmod10 == 3 && int != 13 ? \"rd\" : \"th\"\n\t);\n}\n*/\n\nconst getFullYear = 'getFullYear';\nconst getMonth = 'getMonth';\nconst getDate = 'getDate';\nconst getDay = 'getDay';\nconst getHours = 'getHours';\nconst getMinutes = 'getMinutes';\nconst getSeconds = 'getSeconds';\nconst getMilliseconds = 'getMilliseconds';\n\nconst subs = {\n\t// 2019\n\tYYYY:\td => d[getFullYear](),\n\t// 19\n\tYY:\t\td => (d[getFullYear]()+'').slice(2),\n\t// July\n\tMMMM:\t(d, names) => names.MMMM[d[getMonth]()],\n\t// Jul\n\tMMM:\t(d, names) => names.MMM[d[getMonth]()],\n\t// 07\n\tMM:\t\td => zeroPad2(d[getMonth]()+1),\n\t// 7\n\tM:\t\td => d[getMonth]()+1,\n\t// 09\n\tDD:\t\td => zeroPad2(d[getDate]()),\n\t// 9\n\tD:\t\td => d[getDate](),\n\t// Monday\n\tWWWW:\t(d, names) => names.WWWW[d[getDay]()],\n\t// Mon\n\tWWW:\t(d, names) => names.WWW[d[getDay]()],\n\t// 03\n\tHH:\t\td => zeroPad2(d[getHours]()),\n\t// 3\n\tH:\t\td => d[getHours](),\n\t// 9 (12hr, unpadded)\n\th:\t\td => {let h = d[getHours](); return h == 0 ? 12 : h > 12 ? h - 12 : h;},\n\t// AM\n\tAA:\t\td => d[getHours]() >= 12 ? 'PM' : 'AM',\n\t// am\n\taa:\t\td => d[getHours]() >= 12 ? 'pm' : 'am',\n\t// a\n\ta:\t\td => d[getHours]() >= 12 ? 'p' : 'a',\n\t// 09\n\tmm:\t\td => zeroPad2(d[getMinutes]()),\n\t// 9\n\tm:\t\td => d[getMinutes](),\n\t// 09\n\tss:\t\td => zeroPad2(d[getSeconds]()),\n\t// 9\n\ts:\t\td => d[getSeconds](),\n\t// 374\n\tfff:\td => zeroPad3(d[getMilliseconds]()),\n};\n\nfunction fmtDate(tpl, names) {\n\tnames = names || engNames;\n\tlet parts = [];\n\n\tlet R = /\\{([a-z]+)\\}|[^{]+/gi, m;\n\n\twhile (m = R.exec(tpl))\n\t\tparts.push(m[0][0] == '{' ? subs[m[1]] : m[0]);\n\n\treturn d => {\n\t\tlet out = '';\n\n\t\tfor (let i = 0; i < parts.length; i++)\n\t\t\tout += typeof parts[i] == \"string\" ? parts[i] : parts[i](d, names);\n\n\t\treturn out;\n\t}\n}\n\nconst localTz = new Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n// https://stackoverflow.com/questions/15141762/how-to-initialize-a-javascript-date-to-a-particular-time-zone/53652131#53652131\nfunction tzDate(date, tz) {\n\tlet date2;\n\n\t// perf optimization\n\tif (tz == 'Etc/UTC')\n\t\tdate2 = new Date(+date + date.getTimezoneOffset() * 6e4);\n\telse if (tz == localTz)\n\t\tdate2 = date;\n\telse {\n\t\tdate2 = new Date(date.toLocaleString('en-US', {timeZone: tz}));\n\t\tdate2.setMilliseconds(date[getMilliseconds]());\n\t}\n\n\treturn date2;\n}\n\n//export const series = [];\n\n// default formatters:\n\nconst onlyWhole = v => v % 1 == 0;\n\nconst allMults = [1,2,2.5,5];\n\nconst wholeMults = allMults.filter(onlyWhole);\n\n// ...0.01, 0.02, 0.025, 0.05, 0.1, 0.2, 0.25, 0.5\nconst decIncrs = genIncrs(10, -16, 0, allMults);\n\n// 1, 2, 2.5, 5, 10, 20, 25, 50...\nconst oneIncrs = genIncrs(10, 0, 16, allMults);\n\n// 1, 2,      5, 10, 20, 25, 50...\nconst wholeIncrs = oneIncrs.filter(onlyWhole);\n\nconst numIncrs = decIncrs.concat(oneIncrs);\n\nlet s = 1,\n\tm = 60,\n\th = m * m,\n\td = h * 24,\n\tmo = d * 30,\n\ty = d * 365;\n\n// min of 1e-3 prevents setting a temporal x ticks too small since Date objects cannot advance ticks smaller than 1ms\nconst timeIncrs =  genIncrs(10, -3, 0, wholeMults).concat([\n\t// minute divisors (# of secs)\n\t1,\n\t5,\n\t10,\n\t15,\n\t30,\n\t// hour divisors (# of mins)\n\tm,\n\tm * 5,\n\tm * 10,\n\tm * 15,\n\tm * 30,\n\t// day divisors (# of hrs)\n\th,\n\th * 2,\n\th * 3,\n\th * 4,\n\th * 6,\n\th * 8,\n\th * 12,\n\t// month divisors TODO: need more?\n\td,\n\td * 2,\n\td * 3,\n\td * 4,\n\td * 5,\n\td * 6,\n\td * 7,\n\td * 8,\n\td * 9,\n\td * 10,\n\td * 15,\n\t// year divisors (# months, approx)\n\tmo,\n\tmo * 2,\n\tmo * 3,\n\tmo * 4,\n\tmo * 6,\n\t// century divisors\n\ty,\n\ty * 2,\n\ty * 5,\n\ty * 10,\n\ty * 25,\n\ty * 50,\n\ty * 100,\n]);\n\n// base 2\nconst binIncrs = genIncrs(2, -53, 53, [1]);\n\n/*\nconsole.log({\n\tdecIncrs,\n\toneIncrs,\n\twholeIncrs,\n\tnumIncrs,\n\ttimeIncrs,\n\tfixedDec,\n});\n*/\n\nfunction timeAxisStamps(stampCfg, fmtDate) {\n\treturn stampCfg.map(s => s.map((v, i) =>\n\t\ti == 0 || i == 8 || v == null ? v : fmtDate(i == 1 || s[8] == 0 ? v : s[1] + v)\n\t));\n}\n\nconst NL = \"\\n\";\n\nconst yyyy = \"{YYYY}\";\nconst NLyyyy = NL + yyyy;\nconst md = \"{M}/{D}\";\nconst NLmd = NL + md;\nconst NLmdyy = NLmd + \"/{YY}\";\n\nconst aa = \"{aa}\";\nconst hmm = \"{h}:{mm}\";\nconst hmmaa = hmm + aa;\nconst NLhmmaa = NL + hmmaa;\nconst ss = \":{ss}\";\n\nconst _ = null;\n\n// [0]:   minimum num secs in the tick incr\n// [1]:   default tick format\n// [2-7]: rollover tick formats\n// [8]:   mode: 0: replace [1] -> [2-7], 1: concat [1] + [2-7]\nconst _timeAxisStamps = [\n//   tick incr    default          year                    month   day                   hour    min       sec   mode\n\t[y,           yyyy,            _,                      _,      _,                    _,      _,        _,       1],\n\t[d * 28,      \"{MMM}\",         NLyyyy,                 _,      _,                    _,      _,        _,       1],\n\t[d,           md,              NLyyyy,                 _,      _,                    _,      _,        _,       1],\n\t[h,           \"{h}\" + aa,      NLmdyy,                 _,      NLmd,                 _,      _,        _,       1],\n\t[m,           hmmaa,           NLmdyy,                 _,      NLmd,                 _,      _,        _,       1],\n\t[s,           ss,              NLmdyy + \" \" + hmmaa,   _,      NLmd + \" \" + hmmaa,   _,      NLhmmaa,  _,       1],\n\t[1e-3,        ss + \".{fff}\",   NLmdyy + \" \" + hmmaa,   _,      NLmd + \" \" + hmmaa,   _,      NLhmmaa,  _,       1],\n];\n\n// TODO: will need to accept spaces[] and pull incr into the loop when grid will be non-uniform, eg for log scales.\n// currently we ignore this for months since they're *nearly* uniform and the added complexity is not worth it\nfunction timeAxisVals(tzDate, stamps) {\n\treturn (self, splits, axisIdx, foundSpace, foundIncr) => {\n\t\tlet s = stamps.find(s => foundIncr >= s[0]) || stamps[stamps.length - 1];\n\n\t\t// these track boundaries when a full label is needed again\n\t\tlet prevYear;\n\t\tlet prevMnth;\n\t\tlet prevDate;\n\t\tlet prevHour;\n\t\tlet prevMins;\n\t\tlet prevSecs;\n\n\t\treturn splits.map(split => {\n\t\t\tlet date = tzDate(split);\n\n\t\t\tlet newYear = date[getFullYear]();\n\t\t\tlet newMnth = date[getMonth]();\n\t\t\tlet newDate = date[getDate]();\n\t\t\tlet newHour = date[getHours]();\n\t\t\tlet newMins = date[getMinutes]();\n\t\t\tlet newSecs = date[getSeconds]();\n\n\t\t\tlet stamp = (\n\t\t\t\tnewYear != prevYear && s[2] ||\n\t\t\t\tnewMnth != prevMnth && s[3] ||\n\t\t\t\tnewDate != prevDate && s[4] ||\n\t\t\t\tnewHour != prevHour && s[5] ||\n\t\t\t\tnewMins != prevMins && s[6] ||\n\t\t\t\tnewSecs != prevSecs && s[7] ||\n\t\t\t\t                       s[1]\n\t\t\t);\n\n\t\t\tprevYear = newYear;\n\t\t\tprevMnth = newMnth;\n\t\t\tprevDate = newDate;\n\t\t\tprevHour = newHour;\n\t\t\tprevMins = newMins;\n\t\t\tprevSecs = newSecs;\n\n\t\t\treturn stamp(date);\n\t\t});\n\t}\n}\n\n// for when axis.values is defined as a static fmtDate template string\nfunction timeAxisVal(tzDate, dateTpl) {\n\tlet stamp = fmtDate(dateTpl);\n\treturn (self, splits, axisIdx, foundSpace, foundIncr) => splits.map(split => stamp(tzDate(split)));\n}\n\nfunction mkDate(y, m, d) {\n\treturn new Date(y, m, d);\n}\n\n// the ensures that axis ticks, values & grid are aligned to logical temporal breakpoints and not an arbitrary timestamp\n// https://www.timeanddate.com/time/dst/\n// https://www.timeanddate.com/time/dst/2019.html\n// https://www.epochconverter.com/timezones\nfunction timeAxisSplits(tzDate) {\n\treturn (self, axisIdx, scaleMin, scaleMax, foundIncr, foundSpace) => {\n\t\tlet splits = [];\n\t\tlet isYr = foundIncr >= y;\n\t\tlet isMo = foundIncr >= mo && foundIncr < y;\n\n\t\t// get the timezone-adjusted date\n\t\tlet minDate = tzDate(scaleMin);\n\t\tlet minDateTs = minDate / 1e3;\n\n\t\t// get ts of 12am (this lands us at or before the original scaleMin)\n\t\tlet minMin = mkDate(minDate[getFullYear](), isYr ? 0 : minDate[getMonth](), isMo || isYr ? 1 : minDate[getDate]());\n\t\tlet minMinTs = minMin / 1e3;\n\n\t\tif (isMo || isYr) {\n\t\t\tlet moIncr = isMo ? foundIncr / mo : 0;\n\t\t\tlet yrIncr = isYr ? foundIncr / y  : 0;\n\t\t//\tlet tzOffset = scaleMin - minDateTs;\t\t// needed?\n\t\t\tlet split = minDateTs == minMinTs ? minDateTs : mkDate(minMin[getFullYear]() + yrIncr, minMin[getMonth]() + moIncr, 1) / 1e3;\n\t\t\tlet splitDate = new Date(split * 1e3);\n\t\t\tlet baseYear = splitDate[getFullYear]();\n\t\t\tlet baseMonth = splitDate[getMonth]();\n\n\t\t\tfor (let i = 0; split <= scaleMax; i++) {\n\t\t\t\tlet next = mkDate(baseYear + yrIncr * i, baseMonth + moIncr * i, 1);\n\t\t\t\tlet offs = next - tzDate(next / 1e3);\n\n\t\t\t\tsplit = (+next + offs) / 1e3;\n\n\t\t\t\tif (split <= scaleMax)\n\t\t\t\t\tsplits.push(split);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlet incr0 = foundIncr >= d ? d : foundIncr;\n\t\t\tlet tzOffset = floor(scaleMin) - floor(minDateTs);\n\t\t\tlet split = minMinTs + tzOffset + incrRoundUp(minDateTs - minMinTs, incr0);\n\t\t\tsplits.push(split);\n\n\t\t\tlet date0 = tzDate(split);\n\n\t\t\tlet prevHour = date0[getHours]() + (date0[getMinutes]() / m) + (date0[getSeconds]() / h);\n\t\t\tlet incrHours = foundIncr / h;\n\n\t\t\tlet minSpace = self.axes[axisIdx]._space;\n\t\t\tlet pctSpace = foundSpace / minSpace;\n\n\t\t\twhile (1) {\n\t\t\t\tsplit = roundDec(split + foundIncr, 3);\n\n\t\t\t\tif (split > scaleMax)\n\t\t\t\t\tbreak;\n\n\t\t\t\tif (incrHours > 1) {\n\t\t\t\t\tlet expectedHour = floor(roundDec(prevHour + incrHours, 6)) % 24;\n\t\t\t\t\tlet splitDate = tzDate(split);\n\t\t\t\t\tlet actualHour = splitDate.getHours();\n\n\t\t\t\t\tlet dstShift = actualHour - expectedHour;\n\n\t\t\t\t\tif (dstShift > 1)\n\t\t\t\t\t\tdstShift = -1;\n\n\t\t\t\t\tsplit -= dstShift * h;\n\n\t\t\t\t\tprevHour = (prevHour + incrHours) % 24;\n\n\t\t\t\t\t// add a tick only if it's further than 70% of the min allowed label spacing\n\t\t\t\t\tlet prevSplit = splits[splits.length - 1];\n\t\t\t\t\tlet pctIncr = roundDec((split - prevSplit) / foundIncr, 3);\n\n\t\t\t\t\tif (pctIncr * pctSpace >= .7)\n\t\t\t\t\t\tsplits.push(split);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tsplits.push(split);\n\t\t\t}\n\t\t}\n\n\t\treturn splits;\n\t}\n}\n\nfunction timeSeriesStamp(stampCfg, fmtDate) {\n\treturn fmtDate(stampCfg);\n}\nconst _timeSeriesStamp = '{YYYY}-{MM}-{DD} {h}:{mm}{aa}';\n\nfunction timeSeriesVal(tzDate, stamp) {\n\treturn (self, val) => stamp(tzDate(val));\n}\n\nfunction cursorPoint(self, si) {\n\tlet s = self.series[si];\n\n\tlet pt = placeDiv();\n\n\tpt.style.background = s.stroke || hexBlack;\n\n\tlet dia = ptDia(s.width, 1);\n\tlet mar = (dia - 1) / -2;\n\n\tsetStylePx(pt, WIDTH, dia);\n\tsetStylePx(pt, HEIGHT, dia);\n\tsetStylePx(pt, \"marginLeft\", mar);\n\tsetStylePx(pt, \"marginTop\", mar);\n\n\treturn pt;\n}\n\nfunction dataIdx(self, seriesIdx, cursorIdx) {\n\treturn cursorIdx;\n}\n\nconst moveTuple = [0,0];\n\nfunction cursorMove(self, mouseLeft1, mouseTop1) {\n\tmoveTuple[0] = mouseLeft1;\n\tmoveTuple[1] = mouseTop1;\n\treturn moveTuple;\n}\n\nfunction filtBtn0(self, targ, handle) {\n\treturn e => {\n\t\te.button == 0 && handle(e);\n\t};\n}\n\nfunction passThru(self, targ, handle) {\n\treturn handle;\n}\n\nconst cursorOpts = {\n\tshow: true,\n\tx: true,\n\ty: true,\n\tlock: false,\n\tmove: cursorMove,\n\tpoints: {\n\t\tshow: cursorPoint,\n\t},\n\n\tbind: {\n\t\tmousedown:   filtBtn0,\n\t\tmouseup:     filtBtn0,\n\t\tclick:       filtBtn0,\n\t\tdblclick:    filtBtn0,\n\n\t\tmousemove:   passThru,\n\t\tmouseleave:  passThru,\n\t\tmouseenter:  passThru,\n\t},\n\n\tdrag: {\n\t\tsetScale: true,\n\t\tx: true,\n\t\ty: false,\n\t\tdist: 0,\n\t\tuni: null,\n\t\t_x: false,\n\t\t_y: false,\n\t},\n\n\tfocus: {\n\t\tprox: -1,\n\t},\n\n\tleft: -10,\n\ttop: -10,\n\tidx: null,\n\tdataIdx,\n};\n\nconst grid = {\n\tshow: true,\n\tstroke: \"rgba(0,0,0,0.07)\",\n\twidth: 2,\n//\tdash: [],\n\tfilter: retArg1,\n};\n\nconst ticks = assign({}, grid, {size: 10});\n\nconst font      = '12px system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"';\nconst labelFont = \"bold \" + font;\nconst lineMult = 1.5;\t\t// font-size multiplier\n\nconst xAxisOpts = {\n\tshow: true,\n\tscale: \"x\",\n\tspace: 50,\n\tgap: 5,\n\tsize: 50,\n\tlabelSize: 30,\n\tlabelFont,\n\tside: 2,\n//\tclass: \"x-vals\",\n//\tincrs: timeIncrs,\n//\tvalues: timeVals,\n//\tfilter: retArg1,\n\tgrid,\n\tticks,\n\tfont,\n\trotate: 0,\n};\n\nconst numSeriesLabel = \"Value\";\nconst timeSeriesLabel = \"Time\";\n\nconst xSeriesOpts = {\n\tshow: true,\n\tscale: \"x\",\n\tauto: false,\n\tsorted: 1,\n//\tlabel: \"Time\",\n//\tvalue: v => stamp(new Date(v * 1e3)),\n\n\t// internal caches\n\tmin: inf,\n\tmax: -inf,\n\tidxs: [],\n};\n\nfunction numAxisVals(self, splits, axisIdx, foundSpace, foundIncr) {\n\treturn splits.map(v => v == null ? \"\" : fmtNum(v));\n}\n\nfunction numAxisSplits(self, axisIdx, scaleMin, scaleMax, foundIncr, foundSpace, forceMin) {\n\tlet splits = [];\n\n\tlet numDec = fixedDec.get(foundIncr) || 0;\n\n\tscaleMin = forceMin ? scaleMin : roundDec(incrRoundUp(scaleMin, foundIncr), numDec);\n\n\tfor (let val = scaleMin; val <= scaleMax; val = roundDec(val + foundIncr, numDec))\n\t\tsplits.push(Object.is(val, -0) ? 0 : val);\t\t// coalesces -0\n\n\treturn splits;\n}\n\nfunction logAxisSplits(self, axisIdx, scaleMin, scaleMax, foundIncr, foundSpace, forceMin) {\n\tconst splits = [];\n\n\tconst logBase = self.scales[self.axes[axisIdx].scale].log;\n\n\tconst logFn = logBase == 10 ? log10 : log2;\n\n\tconst exp = floor(logFn(scaleMin));\n\n\tfoundIncr = pow(logBase, exp);\n\n\tif (exp < 0)\n\t\tfoundIncr = roundDec(foundIncr, -exp);\n\n\tlet split = scaleMin;\n\n\tdo {\n\t\tsplits.push(split);\n\t\tsplit = roundDec(split + foundIncr, fixedDec.get(foundIncr));\n\n\t\tif (split >= foundIncr * logBase)\n\t\t\tfoundIncr = split;\n\n\t} while (split <= scaleMax);\n\n\treturn splits;\n}\n\nconst RE_ALL   = /./;\nconst RE_12357 = /[12357]/;\nconst RE_125   = /[125]/;\nconst RE_1     = /1/;\n\nfunction logAxisValsFilt(self, splits, axisIdx, foundSpace, foundIncr) {\n\tlet axis = self.axes[axisIdx];\n\tlet scaleKey = axis.scale;\n\n\tif (self.scales[scaleKey].log == 2)\n\t\treturn splits;\n\n\tlet valToPos = self.valToPos;\n\n\tlet minSpace = axis._space;\n\n\tlet _10 = valToPos(10, scaleKey);\n\n\tlet re = (\n\t\tvalToPos(9, scaleKey) - _10 >= minSpace ? RE_ALL :\n\t\tvalToPos(7, scaleKey) - _10 >= minSpace ? RE_12357 :\n\t\tvalToPos(5, scaleKey) - _10 >= minSpace ? RE_125 :\n\t\tRE_1\n\t);\n\n\treturn splits.map(v => re.test(v) ? v : null);\n}\n\nfunction numSeriesVal(self, val) {\n\treturn val == null ? \"\" : fmtNum(val);\n}\n\nconst yAxisOpts = {\n\tshow: true,\n\tscale: \"y\",\n\tspace: 30,\n\tgap: 5,\n\tsize: 50,\n\tlabelSize: 30,\n\tlabelFont,\n\tside: 3,\n//\tclass: \"y-vals\",\n//\tincrs: numIncrs,\n//\tvalues: (vals, space) => vals,\n//\tfilter: retArg1,\n\tgrid,\n\tticks,\n\tfont,\n\trotate: 0,\n};\n\n// takes stroke width\nfunction ptDia(width, mult) {\n\tlet dia = 3 + (width || 1) * 2;\n\treturn roundDec(dia * mult, 3);\n}\n\nfunction seriesPoints(self, si) {\n\tconst s = self.series[si];\n\tconst dia = ptDia(s.width, pxRatio);\n\tlet maxPts = self.bbox.width / (s.points.space * pxRatio);\n\tlet idxs = self.series[0].idxs;\n\treturn idxs[1] - idxs[0] <= maxPts;\n}\n\nfunction seriesFillTo(self, seriesIdx, dataMin, dataMax) {\n\tlet scale = self.scales[self.series[seriesIdx].scale];\n\treturn scale.distr == 3 ? scale.min : 0;\n}\n\nconst ySeriesOpts = {\n\tscale: \"y\",\n\tauto: true,\n\tsorted: 0,\n\tshow: true,\n\tband: false,\n\tspanGaps: false,\n\tisGap: (self, seriesIdx, dataIdx) => true,\n\talpha: 1,\n\tpoints: {\n\t\tshow: seriesPoints,\n\t//\tstroke: \"#000\",\n\t//\tfill: \"#fff\",\n\t//\twidth: 1,\n\t//\tsize: 10,\n\t},\n//\tlabel: \"Value\",\n//\tvalue: v => v,\n\tvalues: null,\n\n\t// internal caches\n\tmin: inf,\n\tmax: -inf,\n\tidxs: [],\n\n\tpath: null,\n\tclip: null,\n};\n\nconst xScaleOpts = {\n\ttime: true,\n\tauto: true,\n\tdistr: 1,\n\tlog: 10,\n\tmin: null,\n\tmax: null,\n};\n\nconst yScaleOpts = assign({}, xScaleOpts, {\n\ttime: false,\n});\n\nconst syncs = {};\n\nfunction _sync(opts) {\n\tlet clients = [];\n\n\treturn {\n\t\tsub(client) {\n\t\t\tclients.push(client);\n\t\t},\n\t\tunsub(client) {\n\t\t\tclients = clients.filter(c => c != client);\n\t\t},\n\t\tpub(type, self, x, y, w, h, i) {\n\t\t\tif (clients.length > 1) {\n\t\t\t\tclients.forEach(client => {\n\t\t\t\t\tclient != self && client.pub(type, self, x, y, w, h, i);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction setDefaults(d, xo, yo, initY) {\n\tlet d2 = initY ? [d[0], d[1]].concat(d.slice(2)) : [d[0]].concat(d.slice(1));\n\treturn d2.map((o, i) => setDefault(o, i, xo, yo));\n}\n\nfunction setDefault(o, i, xo, yo) {\n\treturn assign({}, (i == 0 || o && o.side % 2 == 0 ? xo : yo), o);\n}\n\nfunction getValPct(val, scale) {\n\treturn (\n\t\tscale.distr == 3\n\t\t? log10(val / scale.min) / log10(scale.max / scale.min)\n\t\t: (val - scale.min) / (scale.max - scale.min)\n\t);\n}\n\nfunction getYPos(val, scale, hgt, top) {\n\tlet pctY = getValPct(val, scale);\n\treturn top + (1 - pctY) * hgt;\n}\n\nfunction getXPos(val, scale, wid, lft) {\n\tlet pctX = getValPct(val, scale);\n\treturn lft + pctX * wid;\n}\n\nconst nullMinMax = [null, null];\n\nfunction snapNumX(self, dataMin, dataMax) {\n\treturn dataMin == null ? nullMinMax : [dataMin, dataMax];\n}\n\nconst snapTimeX = snapNumX;\n\n// this ensures that non-temporal/numeric y-axes get multiple-snapped padding added above/below\n// TODO: also account for incrs when snapping to ensure top of axis gets a tick & value\nfunction snapNumY(self, dataMin, dataMax) {\n\treturn dataMin == null ? nullMinMax : rangeNum(dataMin, dataMax, 0.1, true);\n}\n\nfunction snapLogY(self, dataMin, dataMax, scale) {\n\treturn dataMin == null ? nullMinMax : rangeLog(dataMin, dataMax, self.scales[scale].log, false);\n}\n\nconst snapLogX = snapLogY;\n\n// dim is logical (getClientBoundingRect) pixels, not canvas pixels\nfunction findIncr(min, max, incrs, dim, minSpace) {\n\tlet pxPerUnit = dim / (max - min);\n\n\tlet minDec = (\"\"+floor(min)).length;\n\n\tfor (var i = 0; i < incrs.length; i++) {\n\t\tlet space = incrs[i] * pxPerUnit;\n\n\t\tlet incrDec = incrs[i] < 10 ? fixedDec.get(incrs[i]) : 0;\n\n\t\tif (space >= minSpace && minDec + incrDec < 17)\n\t\t\treturn [incrs[i], space];\n\t}\n\n\treturn [0, 0];\n}\n\nfunction pxRatioFont(font) {\n\tlet fontSize;\n\tfont = font.replace(/(\\d+)px/, (m, p1) => (fontSize = round(p1 * pxRatio)) + 'px');\n\treturn [font, fontSize];\n}\n\nfunction uPlot(opts, data, then) {\n\tconst self = {};\n\n\tlet ready = false;\n\tself.status = 0;\n\n\tconst root = self.root = placeDiv(UPLOT);\n\n\tif (opts.id != null)\n\t\troot.id = opts.id;\n\n\taddClass(root, opts.class);\n\n\tif (opts.title) {\n\t\tlet title = placeDiv(TITLE, root);\n\t\ttitle.textContent = opts.title;\n\t}\n\n\tconst can = placeTag(\"canvas\");\n\tconst ctx = self.ctx = can.getContext(\"2d\");\n\n\tconst wrap = placeDiv(WRAP, root);\n\tconst under = placeDiv(UNDER, wrap);\n\twrap.appendChild(can);\n\tconst over = placeDiv(OVER, wrap);\n\n\topts = copy(opts);\n\n\t(opts.plugins || []).forEach(p => {\n\t\tif (p.opts)\n\t\t\topts = p.opts(self, opts) || opts;\n\t});\n\n\n\n\tconst series  = self.series = setDefaults(opts.series || [], xSeriesOpts, ySeriesOpts, false);\n\tconst axes    = self.axes   = setDefaults(opts.axes   || [], xAxisOpts,   yAxisOpts,    true);\n\tconst scales  = self.scales = {};\n\n\tconst xScaleKey = series[0].scale;\n\n\tfunction initScale(scaleKey) {\n\t\tlet sc = scales[scaleKey];\n\n\t\tif (sc == null) {\n\t\t\tlet scaleOpts = (opts.scales || EMPTY_OBJ)[scaleKey] || EMPTY_OBJ;\n\n\t\t\tif (scaleOpts.from != null) {\n\t\t\t\t// ensure parent is initialized\n\t\t\t\tinitScale(scaleOpts.from);\n\t\t\t\t// dependent scales inherit\n\t\t\t\tscales[scaleKey] = assign({}, scales[scaleOpts.from], scaleOpts);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsc = scales[scaleKey] = assign({}, (scaleKey == xScaleKey ? xScaleOpts : yScaleOpts), scaleOpts);\n\n\t\t\t\tlet isTime =  sc.time;\n\t\t\t\tlet isLog  = sc.distr == 3;\n\n\t\t\t\tlet rn = sc.range;\n\n\t\t\t\tif (scaleKey != xScaleKey && !isArr(rn) && isObj(rn)) {\n\t\t\t\t\tlet cfg = rn;\n\t\t\t\t\t// this is similar to snapNumY\n\t\t\t\t\trn = (self, dataMin, dataMax) => dataMin == null ? nullMinMax : rangeNum(dataMin, dataMax, cfg);\n\t\t\t\t}\n\n\t\t\t\tsc.range = fnOrSelf(rn || (isTime ? snapTimeX : scaleKey == xScaleKey ? (isLog ? snapLogX : snapNumX) : (isLog ? snapLogY : snapNumY)));\n\n\t\t\t\tsc.auto = fnOrSelf(sc.auto);\n\t\t\t}\n\t\t}\n\t}\n\n\tinitScale(\"x\");\n\tinitScale(\"y\");\n\n\tseries.forEach((s, i) => {\n\t\tinitScale(s.scale);\n\t});\n\n\tfor (let k in opts.scales)\n\t\tinitScale(k);\n\n\tconst xScaleDistr = scales[xScaleKey].distr;\n\n\tconst pendScales = {};\n\n\t// explicitly-set initial scales\n\tfor (let k in scales) {\n\t\tlet sc = scales[k];\n\n\t\tif (sc.min != null || sc.max != null)\n\t\t\tpendScales[k] = {min: sc.min, max: sc.max};\n\t}\n\n\tconst gutters = self.gutters = assign({\n\t\tx: round(yAxisOpts.size / 2),\n\t\ty: round(xAxisOpts.size / 3),\n\t\t_x: null,\n\t\t_y: null,\n\t}, opts.gutters);\n\n\tgutters.x  = fnOrSelf(gutters.x);\n\tgutters.y  = fnOrSelf(gutters.y);\n\tgutters._x = gutters.x(self);\n\tgutters._y = gutters.y(self);\n\n//\tself.tz = opts.tz || Intl.DateTimeFormat().resolvedOptions().timeZone;\n\tconst _tzDate  =  (opts.tzDate || (ts => new Date(ts * 1e3)));\n\tconst _fmtDate =  (opts.fmtDate || fmtDate);\n\n\tconst _timeAxisSplits =  timeAxisSplits(_tzDate);\n\tconst _timeAxisVals   =  timeAxisVals(_tzDate, timeAxisStamps(_timeAxisStamps, _fmtDate));\n\tconst _timeSeriesVal  =  timeSeriesVal(_tzDate, timeSeriesStamp(_timeSeriesStamp, _fmtDate));\n\n\tconst legend     =  assign({show: true, live: true}, opts.legend);\n\tconst showLegend =  legend.show;\n\n\tlet legendEl;\n\tlet legendRows = [];\n\tlet legendCols;\n\tlet multiValLegend = false;\n\n\tif (showLegend) {\n\t\tlegendEl = placeTag(\"table\", LEGEND, root);\n\n\t\tconst getMultiVals = series[1] ? series[1].values : null;\n\t\tmultiValLegend = getMultiVals != null;\n\n\t\tif (multiValLegend) {\n\t\t\tlet head = placeTag(\"tr\", LEGEND_THEAD, legendEl);\n\t\t\tplaceTag(\"th\", null, head);\n\t\t\tlegendCols = getMultiVals(self, 1, 0);\n\n\t\t\tfor (var key in legendCols)\n\t\t\t\tplaceTag(\"th\", LEGEND_LABEL, head).textContent = key;\n\t\t}\n\t\telse {\n\t\t\tlegendCols = {_: 0};\n\t\t\taddClass(legendEl, LEGEND_INLINE);\n\t\t\tlegend.live && addClass(legendEl, LEGEND_LIVE);\n\t\t}\n\t}\n\n\tfunction initLegendRow(s, i) {\n\t\tif (i == 0 && (multiValLegend || !legend.live))\n\t\t\treturn null;\n\n\t\tlet _row = [];\n\n\t\tlet row = placeTag(\"tr\", LEGEND_SERIES, legendEl, legendEl.childNodes[i]);\n\n\t\taddClass(row, s.class);\n\n\t\tif (!s.show)\n\t\t\taddClass(row, OFF);\n\n\t\tlet label = placeTag(\"th\", null, row);\n\n\t\tlet indic = placeDiv(LEGEND_MARKER, label);\n\t\tindic.style.borderColor = s.width ? s.stroke : i > 0 && s.points.width ? s.points.stroke : null;\n\t\tindic.style.backgroundColor = s.fill || null;\n\n\t\tlet text = placeDiv(LEGEND_LABEL, label);\n\t\ttext.textContent = s.label;\n\n\t\tif (i > 0) {\n\t\t\tonMouse(\"click\", label, e => {\n\t\t\t\tif ( cursor._lock)\n\t\t\t\t\treturn;\n\n\t\t\t\tsetSeries(series.indexOf(s), {show: !s.show},  syncOpts.setSeries);\n\t\t\t});\n\n\t\t\tif (cursorFocus) {\n\t\t\t\tonMouse(mouseenter, label, e => {\n\t\t\t\t\tif (cursor._lock)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tsetSeries(series.indexOf(s), {focus: true}, syncOpts.setSeries);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfor (var key in legendCols) {\n\t\t\tlet v = placeTag(\"td\", LEGEND_VALUE, row);\n\t\t\tv.textContent = \"--\";\n\t\t\t_row.push(v);\n\t\t}\n\n\t\treturn _row;\n\t}\n\n\tconst mouseListeners = new Map();\n\n\tfunction onMouse(ev, targ, fn) {\n\t\tconst targListeners = mouseListeners.get(targ) || {};\n\t\tconst listener = cursor.bind[ev](self, targ, fn);\n\n\t\tif (listener) {\n\t\t\ton(ev, targ, targListeners[ev] = listener);\n\t\t\tmouseListeners.set(targ, targListeners);\n\t\t}\n\t}\n\n\tfunction offMouse(ev, targ, fn) {\n\t\tconst targListeners = mouseListeners.get(targ) || {};\n\t\toff(ev, targ, targListeners[ev]);\n\t\ttargListeners[ev] = null;\n\t}\n\n\tlet fullWidCss = 0;\n\tlet fullHgtCss = 0;\n\n\tlet plotWidCss = 0;\n\tlet plotHgtCss = 0;\n\n\t// plot margins to account for axes\n\tlet plotLftCss = 0;\n\tlet plotTopCss = 0;\n\n\tlet plotLft = 0;\n\tlet plotTop = 0;\n\tlet plotWid = 0;\n\tlet plotHgt = 0;\n\n\tself.bbox = {};\n\n\tlet shouldSetScales = false;\n\tlet shouldSetSize = false;\n\tlet shouldConvergeSize = false;\n\tlet shouldSetCursor = false;\n\tlet shouldSetLegend = false;\n\n\tfunction _setSize(width, height) {\n\t\tif (width != self.width || height != self.height)\n\t\t\tcalcSize(width, height);\n\n\t\tresetYSeries(false);\n\n\t\tshouldConvergeSize = true;\n\t\tshouldSetSize = true;\n\t\tshouldSetCursor = true;\n\t\tshouldSetLegend = true;\n\t\tcommit();\n\t}\n\n\tfunction calcSize(width, height) {\n\t//\tlog(\"calcSize()\", arguments);\n\n\t\tself.width  = fullWidCss = plotWidCss = width;\n\t\tself.height = fullHgtCss = plotHgtCss = height;\n\t\tplotLftCss  = plotTopCss = 0;\n\n\t\tcalcPlotRect();\n\t\tcalcAxesRects();\n\n\t\tlet bb = self.bbox;\n\n\t\tplotLft = bb[LEFT]   = incrRound(plotLftCss * pxRatio, 0.5);\n\t\tplotTop = bb[TOP]    = incrRound(plotTopCss * pxRatio, 0.5);\n\t\tplotWid = bb[WIDTH]  = incrRound(plotWidCss * pxRatio, 0.5);\n\t\tplotHgt = bb[HEIGHT] = incrRound(plotHgtCss * pxRatio, 0.5);\n\t}\n\n\tfunction convergeSize() {\n\t\tlet converged = false;\n\n\t\twhile (!converged) {\n\t\t\tlet axesConverged = axesCalc();\n\t\t\tlet guttersConverged = guttersCalc();\n\n\t\t\tconverged = axesConverged && guttersConverged;\n\n\t\t\tif (!converged) {\n\t\t\t\tcalcSize(self.width, self.height);\n\t\t\t\tshouldSetSize = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setSize({width, height}) {\n\t\t_setSize(width, height);\n\t}\n\n\tself.setSize = setSize;\n\n\t// accumulate axis offsets, reduce canvas width\n\tfunction calcPlotRect() {\n\t\t// easements for edge labels\n\t\tlet hasTopAxis = false;\n\t\tlet hasBtmAxis = false;\n\t\tlet hasRgtAxis = false;\n\t\tlet hasLftAxis = false;\n\n\t\taxes.forEach((axis, i) => {\n\t\t\tif (axis.show && axis._show) {\n\t\t\t\tlet {side, _size} = axis;\n\t\t\t\tlet isVt = side % 2;\n\t\t\t\tlet labelSize = axis.labelSize = (axis.label != null ? (axis.labelSize || 30) : 0);\n\n\t\t\t\tlet fullSize = _size + labelSize;\n\n\t\t\t\tif (fullSize > 0) {\n\t\t\t\t\tif (isVt) {\n\t\t\t\t\t\tplotWidCss -= fullSize;\n\n\t\t\t\t\t\tif (side == 3) {\n\t\t\t\t\t\t\tplotLftCss += fullSize;\n\t\t\t\t\t\t\thasLftAxis = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\thasRgtAxis = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tplotHgtCss -= fullSize;\n\n\t\t\t\t\t\tif (side == 0) {\n\t\t\t\t\t\t\tplotTopCss += fullSize;\n\t\t\t\t\t\t\thasTopAxis = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\thasBtmAxis = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// hz gutters\n\t\tif (hasTopAxis || hasBtmAxis) {\n\t\t\tif (!hasRgtAxis)\n\t\t\t\tplotWidCss -= gutters._x;\n\t\t\tif (!hasLftAxis) {\n\t\t\t\tplotWidCss -= gutters._x;\n\t\t\t\tplotLftCss += gutters._x;\n\t\t\t}\n\t\t}\n\n\t\t// vt gutters\n\t\tif (hasLftAxis || hasRgtAxis) {\n\t\t\tif (!hasBtmAxis)\n\t\t\t\tplotHgtCss -= gutters._y;\n\t\t\tif (!hasTopAxis) {\n\t\t\t\tplotHgtCss -= gutters._y;\n\t\t\t\tplotTopCss += gutters._y;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction calcAxesRects() {\n\t\t// will accum +\n\t\tlet off1 = plotLftCss + plotWidCss;\n\t\tlet off2 = plotTopCss + plotHgtCss;\n\t\t// will accum -\n\t\tlet off3 = plotLftCss;\n\t\tlet off0 = plotTopCss;\n\n\t\tfunction incrOffset(side, size) {\n\n\t\t\tswitch (side) {\n\t\t\t\tcase 1: off1 += size; return off1 - size;\n\t\t\t\tcase 2: off2 += size; return off2 - size;\n\t\t\t\tcase 3: off3 -= size; return off3 + size;\n\t\t\t\tcase 0: off0 -= size; return off0 + size;\n\t\t\t}\n\t\t}\n\n\t\taxes.forEach((axis, i) => {\n\t\t\tif (axis.show && axis._show) {\n\t\t\t\tlet side = axis.side;\n\n\t\t\t\taxis._pos = incrOffset(side, axis._size);\n\n\t\t\t\tif (axis.label != null)\n\t\t\t\t\taxis._lpos = incrOffset(side, axis.labelSize);\n\t\t\t}\n\t\t});\n\t}\n\n\tconst cursor =  (self.cursor = assign({}, cursorOpts, opts.cursor));\n\n\t (cursor._lock = false);\n\t (cursor.points.show = fnOrSelf(cursor.points.show));\n\n\tconst focus = self.focus = assign({}, opts.focus || {alpha: 0.3},  cursor.focus);\n\tconst cursorFocus =  focus.prox >= 0;\n\n\t// series-intersection markers\n\tlet cursorPts = [null];\n\n\tfunction initCursorPt(s, si) {\n\t\tif (si > 0) {\n\t\t\tlet pt = cursor.points.show(self, si);\n\n\t\t\tif (pt) {\n\t\t\t\taddClass(pt, CURSOR_PT);\n\t\t\t\taddClass(pt, s.class);\n\t\t\t\ttrans(pt, -10, -10, plotWidCss, plotHgtCss);\n\t\t\t\tover.insertBefore(pt, cursorPts[si]);\n\n\t\t\t\treturn pt;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction initSeries(s, i) {\n\t\tlet isTime =  scales[s.scale].time;\n\n\t\tlet sv = s.value;\n\t\ts.value = isTime ? (isStr(sv) ? timeSeriesVal(_tzDate, timeSeriesStamp(sv, _fmtDate)) : sv || _timeSeriesVal) : sv || numSeriesVal;\n\t\ts.label = s.label || (isTime ? timeSeriesLabel : numSeriesLabel);\n\n\t\tif (i > 0) {\n\t\t\ts.width = s.width == null ? 1 : s.width;\n\t\t\ts.paths = s.paths || ( buildPaths);\n\t\t\ts.fillTo = s.fillTo || seriesFillTo;\n\t\t\tlet _ptDia = ptDia(s.width, 1);\n\t\t\ts.points = assign({}, {\n\t\t\t\tsize: _ptDia,\n\t\t\t\twidth: max(1, _ptDia * .2),\n\t\t\t\tstroke: s.stroke,\n\t\t\t\tspace: _ptDia * 2,\n\t\t\t}, s.points);\n\t\t\ts.points.show = fnOrSelf(s.points.show);\n\t\t\ts._paths = null;\n\t\t}\n\n\t\tif (showLegend)\n\t\t\tlegendRows.splice(i, 0, initLegendRow(s, i));\n\n\t\tif ( cursor.show) {\n\t\t\tlet pt = initCursorPt(s, i);\n\t\t\tpt && cursorPts.splice(i, 0, pt);\n\t\t}\n\t}\n\n\tfunction addSeries(opts, si) {\n\t\tsi = si == null ? series.length : si;\n\n\t\topts = setDefault(opts, si, xSeriesOpts, ySeriesOpts);\n\t\tseries.splice(si, 0, opts);\n\t\tinitSeries(series[si], si);\n\t}\n\n\tself.addSeries = addSeries;\n\n\tfunction delSeries(i) {\n\t\tseries.splice(i, 1);\n\t\t showLegend && legendRows.splice(i, 1)[0][0].parentNode.remove();\n\t\t cursorPts.length > 1 && cursorPts.splice(i, 1)[0].remove();\n\n\t\t// TODO: de-init no-longer-needed scales?\n\t}\n\n\tself.delSeries = delSeries;\n\n\tseries.forEach(initSeries);\n\n\tfunction initAxis(axis, i) {\n\t\taxis._show = axis.show;\n\n\t\tif (axis.show) {\n\t\t\tlet isVt = axis.side % 2;\n\n\t\t\tlet sc = scales[axis.scale];\n\n\t\t\t// this can occur if all series specify non-default scales\n\t\t\tif (sc == null) {\n\t\t\t\taxis.scale = isVt ? series[1].scale : xScaleKey;\n\t\t\t\tsc = scales[axis.scale];\n\t\t\t}\n\n\t\t\t// also set defaults for incrs & values based on axis distr\n\t\t\tlet isTime =  sc.time;\n\n\t\t\taxis.size   = fnOrSelf(axis.size);\n\t\t\taxis.space  = fnOrSelf(axis.space);\n\t\t\taxis.rotate = fnOrSelf(axis.rotate);\n\t\t\taxis.incrs  = fnOrSelf(axis.incrs  || (          sc.distr == 2 ? wholeIncrs : (isTime ? timeIncrs : numIncrs)));\n\t\t\taxis.splits = fnOrSelf(axis.splits || (isTime && sc.distr == 1 ? _timeAxisSplits : sc.distr == 3 ? logAxisSplits : numAxisSplits));\n\n\t\t\tlet av = axis.values;\n\t\t\taxis.values = (\n\t\t\t\tisTime ? (\n\t\t\t\t\tisArr(av) ?\n\t\t\t\t\t\ttimeAxisVals(_tzDate, timeAxisStamps(av, _fmtDate)) :\n\t\t\t\t\tisStr(av) ?\n\t\t\t\t\t\ttimeAxisVal(_tzDate, av) :\n\t\t\t\t\tav || _timeAxisVals\n\t\t\t\t) : av || numAxisVals\n\t\t\t);\n\n\t\t\taxis.filter = fnOrSelf(axis.filter || (          sc.distr == 3 ? logAxisValsFilt : retArg1));\n\n\t\t\taxis.font      = pxRatioFont(axis.font);\n\t\t\taxis.labelFont = pxRatioFont(axis.labelFont);\n\n\t\t\taxis._size   = axis.size(self, null, i);\n\n\t\t\taxis._space  =\n\t\t\taxis._rotate =\n\t\t\taxis._incrs  =\n\t\t\taxis._found  =\t// foundIncrSpace\n\t\t\taxis._splits =\n\t\t\taxis._values = null;\n\t\t}\n\t}\n\n\t// set axis defaults\n\taxes.forEach(initAxis);\n\n\tlet dataLen;\n\n\t// rendered data window\n\tlet i0 = null;\n\tlet i1 = null;\n\tconst idxs = series[0].idxs;\n\n\tlet data0 = null;\n\n\tlet viaAutoScaleX = false;\n\n\tfunction setData(_data, _resetScales) {\n\t\t_data = _data || [];\n\t\t_data[0] = _data[0] || [];\n\n\t\tself.data = _data;\n\t\tdata = _data.slice();\n\t\tdata0 = data[0];\n\t\tdataLen = data0.length;\n\n\t\tif (xScaleDistr == 2)\n\t\t\tdata[0] = data0.map((v, i) => i);\n\n\t\tresetYSeries(true);\n\n\t\tfire(\"setData\");\n\n\t\tif (_resetScales !== false) {\n\t\t\tlet xsc = scales[xScaleKey];\n\n\t\t\tif (xsc.auto(self, viaAutoScaleX))\n\t\t\t\tautoScaleX();\n\t\t\telse\n\t\t\t\t_setScale(xScaleKey, xsc.min, xsc.max);\n\n\t\t\tshouldSetCursor = true;\n\t\t\tshouldSetLegend = true;\n\t\t\tcommit();\n\t\t}\n\t}\n\n\tself.setData = setData;\n\n\tfunction autoScaleX() {\n\t\tviaAutoScaleX = true;\n\n\t\tlet _min, _max;\n\n\t\tif (dataLen > 0) {\n\t\t\ti0 = idxs[0] = 0;\n\t\t\ti1 = idxs[1] = dataLen - 1;\n\n\t\t\t_min = data[0][i0];\n\t\t\t_max = data[0][i1];\n\n\t\t\tif (xScaleDistr == 2) {\n\t\t\t\t_min = i0;\n\t\t\t\t_max = i1;\n\t\t\t}\n\t\t\telse if (dataLen == 1) {\n\t\t\t\tif (xScaleDistr == 3)\n\t\t\t\t\t[_min, _max] = rangeLog(_min, _min, scales[xScaleKey].log, false);\n\t\t\t\telse if (scales[xScaleKey].time)\n\t\t\t\t\t_max = _min + 86400;\n\t\t\t\telse\n\t\t\t\t\t[_min, _max] = rangeNum(_min, _max, 0.1, true);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\ti0 = idxs[0] = _min = null;\n\t\t\ti1 = idxs[1] = _max = null;\n\t\t}\n\n\t\t_setScale(xScaleKey, _min, _max);\n\n\t\tviaAutoScaleX = false;\n\t}\n\n\tfunction setCtxStyle(stroke, width, dash, fill) {\n\t\tctx.strokeStyle = stroke || transparent;\n\t\tctx.lineWidth = width;\n\t\tctx.lineJoin = \"round\";\n\t\tctx.setLineDash(dash || []);\n\t\tctx.fillStyle = fill || transparent;\n\t}\n\n\tfunction setScales() {\n\t//\tlog(\"setScales()\", arguments);\n\n\t\t// wip scales\n\t\tlet wipScales = copy(scales);\n\n\t\tfor (let k in wipScales) {\n\t\t\tlet wsc = wipScales[k];\n\t\t\tlet psc = pendScales[k];\n\n\t\t\tif (psc != null && psc.min != null) {\n\t\t\t\tassign(wsc, psc);\n\n\t\t\t\t// explicitly setting the x-scale invalidates everything (acts as redraw)\n\t\t\t\tif (k == xScaleKey)\n\t\t\t\t\tresetYSeries(true);\n\t\t\t}\n\t\t\telse if (k != xScaleKey) {\n\t\t\t\tif (dataLen == 0 && wsc.from == null) {\n\t\t\t\t\tlet minMax = wsc.range(self, null, null, k);\n\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\twsc.max = minMax[1];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twsc.min = inf;\n\t\t\t\t\twsc.max = -inf;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dataLen > 0) {\n\t\t\t// pre-range y-scales from y series' data values\n\t\t\tseries.forEach((s, i) => {\n\t\t\t\tlet k = s.scale;\n\t\t\t\tlet wsc = wipScales[k];\n\t\t\t\tlet psc = pendScales[k];\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tlet minMax = wsc.range(self, wsc.min, wsc.max, k);\n\n\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\twsc.max = minMax[1];\n\n\t\t\t\t\ti0 = closestIdx(wsc.min, data[0]);\n\t\t\t\t\ti1 = closestIdx(wsc.max, data[0]);\n\n\t\t\t\t\t// closest indices can be outside of view\n\t\t\t\t\tif (data[0][i0] < wsc.min)\n\t\t\t\t\t\ti0++;\n\t\t\t\t\tif (data[0][i1] > wsc.max)\n\t\t\t\t\t\ti1--;\n\n\t\t\t\t\ts.min = data0[i0];\n\t\t\t\t\ts.max = data0[i1];\n\t\t\t\t}\n\t\t\t\telse if (s.show && s.auto && wsc.auto(self, viaAutoScaleX) && (psc == null || psc.min == null)) {\n\t\t\t\t\t// only run getMinMax() for invalidated series data, else reuse\n\t\t\t\t\tlet minMax = s.min == null ? getMinMax(data[i], i0, i1, s.sorted) : [s.min, s.max];\n\n\t\t\t\t\t// initial min/max\n\t\t\t\t\twsc.min = min(wsc.min, s.min = minMax[0]);\n\t\t\t\t\twsc.max = max(wsc.max, s.max = minMax[1]);\n\t\t\t\t}\n\n\t\t\t\ts.idxs[0] = i0;\n\t\t\t\ts.idxs[1] = i1;\n\t\t\t});\n\n\t\t\t// range independent scales\n\t\t\tfor (let k in wipScales) {\n\t\t\t\tlet wsc = wipScales[k];\n\t\t\t\tlet psc = pendScales[k];\n\n\t\t\t\tif (wsc.from == null && (psc == null || psc.min == null)) {\n\t\t\t\t\tlet minMax = wsc.range(\n\t\t\t\t\t\tself,\n\t\t\t\t\t\twsc.min ==  inf ? null : wsc.min,\n\t\t\t\t\t\twsc.max == -inf ? null : wsc.max,\n\t\t\t\t\t\tk\n\t\t\t\t\t);\n\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\twsc.max = minMax[1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// range dependent scales\n\t\tfor (let k in wipScales) {\n\t\t\tlet wsc = wipScales[k];\n\n\t\t\tif (wsc.from != null) {\n\t\t\t\tlet base = wipScales[wsc.from];\n\t\t\t\tlet minMax = wsc.range(self, base.min, base.max, k);\n\t\t\t\twsc.min = minMax[0];\n\t\t\t\twsc.max = minMax[1];\n\t\t\t}\n\t\t}\n\n\t\tlet changed = {};\n\t\tlet anyChanged = false;\n\n\t\tfor (let k in wipScales) {\n\t\t\tlet wsc = wipScales[k];\n\t\t\tlet sc = scales[k];\n\n\t\t\tif (sc.min != wsc.min || sc.max != wsc.max) {\n\t\t\t\tsc.min = wsc.min;\n\t\t\t\tsc.max = wsc.max;\n\t\t\t\tchanged[k] = anyChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif (anyChanged) {\n\t\t\t// invalidate paths of all series on changed scales\n\t\t\tseries.forEach(s => {\n\t\t\t\tif (changed[s.scale])\n\t\t\t\t\ts._paths = null;\n\t\t\t});\n\n\t\t\tfor (let k in changed) {\n\t\t\t\tshouldConvergeSize = true;\n\t\t\t\tfire(\"setScale\", k);\n\t\t\t}\n\n\t\t\tif ( cursor.show)\n\t\t\t\tshouldSetCursor = true;\n\t\t}\n\n\t\tfor (let k in pendScales)\n\t\t\tpendScales[k] = null;\n\t}\n\n\t// TODO: drawWrap(si, drawPoints) (save, restore, translate, clip)\n\n\tfunction drawPoints(si) {\n\t//\tlog(\"drawPoints()\", arguments);\n\n\t\tlet s = series[si];\n\t\tlet p = s.points;\n\n\t\tconst width = roundDec(p.width * pxRatio, 3);\n\t\tconst offset = (width % 2) / 2;\n\t\tconst isStroked = p.width > 0;\n\n\t\tlet rad = (p.size - p.width) / 2 * pxRatio;\n\t\tlet dia = roundDec(rad * 2, 3);\n\n\t\tctx.translate(offset, offset);\n\n\t\tctx.save();\n\n\t\tctx.beginPath();\n\t\tctx.rect(\n\t\t\tplotLft - dia,\n\t\t\tplotTop - dia,\n\t\t\tplotWid + dia * 2,\n\t\t\tplotHgt + dia * 2,\n\t\t);\n\t\tctx.clip();\n\n\t\tctx.globalAlpha = s.alpha;\n\n\t\tconst path = new Path2D();\n\n\t\tfor (let pi = i0; pi <= i1; pi++) {\n\t\t\tif (data[si][pi] != null) {\n\t\t\t\tlet x = round(getXPos(data[0][pi],  scales[xScaleKey], plotWid, plotLft));\n\t\t\t\tlet y = round(getYPos(data[si][pi], scales[s.scale],   plotHgt, plotTop));\n\n\t\t\t\tpath.moveTo(x + rad, y);\n\t\t\t\tpath.arc(x, y, rad, 0, PI * 2);\n\t\t\t}\n\t\t}\n\n\t\tsetCtxStyle(\n\t\t\tp.stroke,\n\t\t\twidth,\n\t\t\tnull,\n\t\t\tp.fill || (isStroked ? \"#fff\" : s.stroke),\n\t\t);\n\n\t\tctx.fill(path);\n\t\tisStroked && ctx.stroke(path);\n\n\t\tctx.globalAlpha = 1;\n\n\t\tctx.restore();\n\n\t\tctx.translate(-offset, -offset);\n\t}\n\n\t// grabs the nearest indices with y data outside of x-scale limits\n\tfunction getOuterIdxs(ydata) {\n\t\tlet _i0 = clamp(i0 - 1, 0, dataLen - 1);\n\t\tlet _i1 = clamp(i1 + 1, 0, dataLen - 1);\n\n\t\twhile (ydata[_i0] == null && _i0 > 0)\n\t\t\t_i0--;\n\n\t\twhile (ydata[_i1] == null && _i1 < dataLen - 1)\n\t\t\t_i1++;\n\n\t\treturn [_i0, _i1];\n\t}\n\n\tlet dir = 1;\n\n\tfunction drawSeries() {\n\t\t// path building loop must be before draw loop to ensure that all bands are fully constructed\n\t\tseries.forEach((s, i) => {\n\t\t\tif (i > 0 && s.show && s._paths == null) {\n\t\t\t\tlet _idxs = getOuterIdxs(data[i]);\n\t\t\t\ts._paths = s.paths(self, i, _idxs[0], _idxs[1]);\n\t\t\t}\n\t\t});\n\n\t\tseries.forEach((s, i) => {\n\t\t\tif (i > 0 && s.show) {\n\t\t\t\tif (s._paths)\n\t\t\t\t\t drawPath(i);\n\n\t\t\t\tif (s.points.show(self, i, i0, i1))\n\t\t\t\t\t drawPoints(i);\n\n\t\t\t\tfire(\"drawSeries\", i);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction drawPath(si) {\n\t\tconst s = series[si];\n\n\t\tif (dir == 1) {\n\t\t\tconst { stroke, fill, clip } = s._paths;\n\t\t\tconst width = roundDec(s[WIDTH] * pxRatio, 3);\n\t\t\tconst offset = (width % 2) / 2;\n\n\t\t\tsetCtxStyle(s.stroke, width, s.dash, s.fill);\n\n\t\t\tctx.globalAlpha = s.alpha;\n\n\t\t\tctx.translate(offset, offset);\n\n\t\t\tctx.save();\n\n\t\t\tlet lft = plotLft,\n\t\t\t\ttop = plotTop,\n\t\t\t\twid = plotWid,\n\t\t\t\thgt = plotHgt;\n\n\t\t\tlet halfWid = width * pxRatio / 2;\n\n\t\t\tif (s.min == 0)\n\t\t\t\thgt += halfWid;\n\n\t\t\tif (s.max == 0) {\n\t\t\t\ttop -= halfWid;\n\t\t\t\thgt += halfWid;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tctx.rect(lft, top, wid, hgt);\n\t\t\tctx.clip();\n\n\t\t\tif (clip != null)\n\t\t\t\tctx.clip(clip);\n\n\t\t\tif (s.band) {\n\t\t\t\tctx.fill(stroke);\n\t\t\t\twidth && ctx.stroke(stroke);\n\t\t\t}\n\t\t\telse {\n\t\t\t\twidth && ctx.stroke(stroke);\n\n\t\t\t\tif (s.fill != null)\n\t\t\t\t\tctx.fill(fill);\n\t\t\t}\n\n\t\t\tctx.restore();\n\n\t\t\tctx.translate(-offset, -offset);\n\n\t\t\tctx.globalAlpha = 1;\n\t\t}\n\n\t\tif (s.band)\n\t\t\tdir *= -1;\n\t}\n\n\tfunction buildClip(is, gaps, nullHead, nullTail) {\n\t\tlet s = series[is];\n\n\t\tlet clip = null;\n\n\t\t// create clip path (invert gaps and non-gaps)\n\t\tif (gaps.length > 0 && !s.spanGaps) {\n\t\t\tclip = new Path2D();\n\n\t\t\tlet prevGapEnd = plotLft;\n\n\t\t\tfor (let i = 0; i < gaps.length; i++) {\n\t\t\t\tlet g = gaps[i];\n\n\t\t\t\tclip.rect(prevGapEnd, plotTop, g[0] - prevGapEnd, plotTop + plotHgt);\n\n\t\t\t\tprevGapEnd = g[1];\n\t\t\t}\n\n\t\t\tclip.rect(prevGapEnd, plotTop, plotLft + plotWid - prevGapEnd, plotTop + plotHgt);\n\t\t}\n\n\t\treturn clip;\n\t}\n\n\tfunction addGap(gaps, fromX, toX) {\n\t\tif (toX > fromX) {\n\t\t\tlet prevGap = gaps[gaps.length - 1];\n\n\t\t\tif (prevGap && prevGap[0] == fromX)\t\t\t// TODO: gaps must be encoded at stroke widths?\n\t\t\t\tprevGap[1] = toX;\n\t\t\telse\n\t\t\t\tgaps.push([fromX, toX]);\n\t\t}\n\t}\n\n\tfunction nonNullIdx(data, _i0, _i1, dir) {\n\t\tfor (let i = dir == 1 ? _i0 : _i1; i >= _i0 && i <= _i1; i += dir) {\n\t\t\tif (data[i] != null)\n\t\t\t\treturn i;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\tfunction buildPaths(self, is, _i0, _i1) {\n\t\tconst s = series[is];\n\t\tconst isGap = s.isGap;\n\n\t\tconst xdata  = data[0];\n\t\tconst ydata  = data[is];\n\t\tconst scaleX = scales[xScaleKey];\n\t\tconst scaleY = scales[s.scale];\n\n\t\tconst _paths = dir == 1 ? {stroke: new Path2D(), fill: null, clip: null} : series[is-1]._paths;\n\t\tconst stroke = _paths.stroke;\n\t\tconst width = roundDec(s[WIDTH] * pxRatio, 3);\n\n\t\tlet minY = inf,\n\t\t\tmaxY = -inf,\n\t\t\toutY, outX;\n\n\t\t// todo: don't build gaps on dir = -1 pass\n\t\tlet gaps = [];\n\n\t\tlet accX = round(getXPos(xdata[dir == 1 ? _i0 : _i1], scaleX, plotWid, plotLft));\n\t\tlet accGaps = false;\n\n\t\t// data edges\n\t\tlet lftIdx = nonNullIdx(ydata, _i0, _i1, 1);\n\t\tlet rgtIdx = nonNullIdx(ydata, _i0, _i1, -1);\n\t\tlet lftX = incrRound(getXPos(xdata[lftIdx], scaleX, plotWid, plotLft), 0.5);\n\t\tlet rgtX = incrRound(getXPos(xdata[rgtIdx], scaleX, plotWid, plotLft), 0.5);\n\n\t\tif (lftX > plotLft)\n\t\t\taddGap(gaps, plotLft, lftX);\n\n\t\t// the moves the shape edge outside the canvas so stroke doesnt bleed in\n\t\tif (s.band && dir == 1)\n\t\t\tstroke.lineTo(lftX - width * 2, round(getYPos(ydata[_i0], scaleY, plotHgt, plotTop)));\n\n\t\tfor (let i = dir == 1 ? _i0 : _i1; i >= _i0 && i <= _i1; i += dir) {\n\t\t\tlet x = round(getXPos(xdata[i], scaleX, plotWid, plotLft));\n\n\t\t\tif (x == accX) {\n\t\t\t\tif (ydata[i] != null) {\n\t\t\t\t\toutY = round(getYPos(ydata[i], scaleY, plotHgt, plotTop));\n\t\t\t\t\tminY = min(outY, minY);\n\t\t\t\t\tmaxY = max(outY, maxY);\n\t\t\t\t}\n\t\t\t\telse if (!accGaps && isGap(self, is, i))\n\t\t\t\t\taccGaps = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet _addGap = false;\n\n\t\t\t\tif (minY != inf) {\n\t\t\t\t\tstroke.lineTo(accX, minY);\n\t\t\t\t\tstroke.lineTo(accX, maxY);\n\t\t\t\t\tstroke.lineTo(accX, outY);\n\t\t\t\t\toutX = accX;\n\t\t\t\t}\n\t\t\t\telse if (accGaps) {\n\t\t\t\t\t_addGap = true;\n\t\t\t\t\taccGaps = false;\n\t\t\t\t}\n\n\t\t\t\tif (ydata[i] != null) {\n\t\t\t\t\toutY = round(getYPos(ydata[i], scaleY, plotHgt, plotTop));\n\t\t\t\t\tstroke.lineTo(x, outY);\n\t\t\t\t\tminY = maxY = outY;\n\n\t\t\t\t\t// prior pixel can have data but still start a gap if ends with null\n\t\t\t\t\tif (x - accX > 1 && ydata[i-1] == null && isGap(self, is, i-1))\n\t\t\t\t\t\t_addGap = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tminY = inf;\n\t\t\t\t\tmaxY = -inf;\n\n\t\t\t\t\tif (!accGaps && isGap(self, is, i))\n\t\t\t\t\t\taccGaps = true;\n\t\t\t\t}\n\n\t\t\t\t_addGap && addGap(gaps, outX, x);\n\n\t\t\t\taccX = x;\n\t\t\t}\n\t\t}\n\n\t\tif (rgtX < plotLft + plotWid)\n\t\t\taddGap(gaps, rgtX, plotLft + plotWid);\n\n\t\tif (s.band) {\n\t\t\tlet _x, _iy, ydata2;\n\n\t\t\t// the moves the shape edge outside the canvas so stroke doesnt bleed in\n\t\t\tif (dir == 1) {\n\t\t\t\t_x = rgtX + width * 2;\n\t\t\t\t_iy = rgtIdx;\n\t\t\t\tydata2 = data[is + 1];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_x = lftX - width * 2;\n\t\t\t\t_iy = lftIdx;\n\t\t\t\tydata2 = data[is - 1];\n\t\t\t}\n\n\t\t\tstroke.lineTo(_x, round(getYPos(ydata[_iy],  scaleY, plotHgt, plotTop)));\n\t\t\tstroke.lineTo(_x, round(getYPos(ydata2[_iy], scaleY, plotHgt, plotTop)));\n\t\t}\n\n\t\tif (dir == 1) {\n\t\t\t_paths.clip = buildClip(is, gaps, ydata[_i0] == null, ydata[_i1] == null);\n\n\t\t\tif (s.fill != null) {\n\t\t\t\tlet fill = _paths.fill = new Path2D(stroke);\n\n\t\t\t\tlet fillTo = round(getYPos(s.fillTo(self, is, s.min, s.max), scaleY, plotHgt, plotTop));\n\t\t\t\tfill.lineTo(rgtX, fillTo);\n\t\t\t\tfill.lineTo(lftX, fillTo);\n\t\t\t}\n\t\t}\n\n\t\tif (s.band)\n\t\t\tdir *= -1;\n\n\t\treturn _paths;\n\t}\n\n\tself.paths = buildPaths;\n\n\tfunction getIncrSpace(axisIdx, min, max, fullDim) {\n\t\tlet axis = axes[axisIdx];\n\n\t\tlet incrSpace;\n\n\t\tif (fullDim <= 0)\n\t\t\tincrSpace = [0, 0];\n\t\telse {\n\t\t\tlet minSpace = axis._space = axis.space(self, axisIdx, min, max, fullDim);\n\t\t\tlet incrs    = axis._incrs = axis.incrs(self, axisIdx, min, max, fullDim, minSpace);\n\t\t\tincrSpace    = axis._found = findIncr(min, max, incrs, fullDim, minSpace);\n\t\t}\n\n\t\treturn incrSpace;\n\t}\n\n\tfunction drawOrthoLines(offs, filts, ori, side, pos0, len, width, stroke, dash) {\n\t\tlet offset = (width % 2) / 2;\n\n\t\tctx.translate(offset, offset);\n\n\t\tsetCtxStyle(stroke, width, dash);\n\n\t\tctx.beginPath();\n\n\t\tlet x0, y0, x1, y1, pos1 = pos0 + (side == 0 || side == 3 ? -len : len);\n\n\t\tif (ori == 0) {\n\t\t\ty0 = pos0;\n\t\t\ty1 = pos1;\n\t\t}\n\t\telse {\n\t\t\tx0 = pos0;\n\t\t\tx1 = pos1;\n\t\t}\n\n\t\toffs.forEach((off, i) => {\n\t\t\tif (filts[i] == null)\n\t\t\t\treturn;\n\n\t\t\tif (ori == 0)\n\t\t\t\tx0 = x1 = off;\n\t\t\telse\n\t\t\t\ty0 = y1 = off;\n\n\t\t\tctx.moveTo(x0, y0);\n\t\t\tctx.lineTo(x1, y1);\n\t\t});\n\n\t\tctx.stroke();\n\n\t\tctx.translate(-offset, -offset);\n\t}\n\n\tfunction axesCalc() {\n\t//\tlog(\"axesCalc()\", arguments);\n\n\t\tlet converged = true;\n\n\t\taxes.forEach((axis, i) => {\n\t\t\tif (!axis.show)\n\t\t\t\treturn;\n\n\t\t\tlet scale = scales[axis.scale];\n\n\t\t\tif (scale.min == null) {\n\t\t\t\tif (axis._show) {\n\t\t\t\t\tconverged = false;\n\t\t\t\t\taxis._show = false;\n\t\t\t\t\tresetYSeries(false);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!axis._show) {\n\t\t\t\t\tconverged = false;\n\t\t\t\t\taxis._show = true;\n\t\t\t\t\tresetYSeries(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet side = axis.side;\n\t\t\tlet ori = side % 2;\n\n\t\t\tlet {min, max} = scale;\t\t// \t\t// should this toggle them ._show = false\n\n\t\t\tlet [_incr, _space] = getIncrSpace(i, min, max, ori == 0 ? plotWidCss : plotHgtCss);\n\n\t\t\tif (_space == 0)\n\t\t\t\treturn;\n\n\t\t\t// if we're using index positions, force first tick to match passed index\n\t\t\tlet forceMin = scale.distr == 2;\n\n\t\t\tlet _splits = axis._splits = axis.splits(self, i, min, max, _incr, _space, forceMin);\n\n\t\t\t// tick labels\n\t\t\t// BOO this assumes a specific data/series\n\t\t\tlet splits = scale.distr == 2 ? _splits.map(i => data0[i]) : _splits;\n\t\t\tlet incr   = scale.distr == 2 ? data0[_splits[1]] - data0[_splits[0]] : _incr;\n\n\t\t\tlet values = axis._values  = axis.values(self, axis.filter(self, splits, i, _space, incr), i, _space, incr);\n\n\t\t\t// rotating of labels only supported on bottom x axis\n\t\t\taxis._rotate = side == 2 ? axis.rotate(self, values, i, _space) : 0;\n\n\t\t\tlet oldSize = axis._size;\n\n\t\t\taxis._size = axis.size(self, values, i);\n\n\t\t\tif (oldSize != null && axis._size != oldSize)\t\t\t// ready && ?\n\t\t\t\tconverged = false;\n\t\t});\n\n\t\treturn converged;\n\t}\n\n\tfunction guttersCalc() {\n\t\tlet converged = true;\n\n\t\tlet {_x, _y} = gutters;\n\n\t\tgutters._x = gutters.x(self);\n\t\tgutters._y = gutters.y(self);\n\n\t\tif (gutters._x != _x || gutters._y != _y)\n\t\t\tconverged = false;\n\n\t\treturn converged;\n\t}\n\n\tfunction drawAxesGrid() {\n\t\taxes.forEach((axis, i) => {\n\t\t\tif (!axis.show || !axis._show)\n\t\t\t\treturn;\n\n\t\t\tlet scale = scales[axis.scale];\n\t\t\tlet side = axis.side;\n\t\t\tlet ori = side % 2;\n\n\t\t\tlet getPos  = ori == 0 ? getXPos : getYPos;\n\t\t\tlet plotDim = ori == 0 ? plotWid : plotHgt;\n\t\t\tlet plotOff = ori == 0 ? plotLft : plotTop;\n\n\t\t\tlet axisGap  = round(axis.gap * pxRatio);\n\n\t\t\tlet ticks = axis.ticks;\n\t\t\tlet tickSize = ticks.show ? round(ticks.size * pxRatio) : 0;\n\n\t\t\tlet [_incr, _space] = axis._found;\n\t\t\tlet _splits = axis._splits;\n\n\t\t\t// tick labels\n\t\t\t// BOO this assumes a specific data/series\n\t\t\tlet splits = scale.distr == 2 ? _splits.map(i => data0[i]) : _splits;\n\t\t\tlet incr   = scale.distr == 2 ? data0[_splits[1]] - data0[_splits[0]] : _incr;\n\n\t\t\t// rotating of labels only supported on bottom x axis\n\t\t\tlet angle = axis._rotate * -PI/180;\n\n\t\t\tlet basePos  = round(axis._pos * pxRatio);\n\t\t\tlet shiftAmt = tickSize + axisGap;\n\t\t\tlet shiftDir = ori == 0 && side == 0 || ori == 1 && side == 3 ? -1 : 1;\n\t\t\tlet finalPos = basePos + shiftAmt * shiftDir;\n\t\t\tlet y        = ori == 0 ? finalPos : 0;\n\t\t\tlet x        = ori == 1 ? finalPos : 0;\n\n\t\t\tctx.font         = axis.font[0];\n\t\t\tctx.fillStyle    = axis.stroke || hexBlack;\t\t\t\t\t\t\t\t\t// rgba?\n\t\t\tctx.textAlign    = axis.align == 1 ? LEFT :\n\t\t\t                   axis.align == 2 ? RIGHT :\n\t\t\t                   angle > 0 ? LEFT :\n\t\t\t                   angle < 0 ? RIGHT :\n\t\t\t                   ori == 0 ? \"center\" : side == 3 ? RIGHT : LEFT;\n\t\t\tctx.textBaseline = angle ||\n\t\t\t                   ori == 1 ? \"middle\" : side == 2 ? TOP   : BOTTOM;\n\n\t\t\tlet lineHeight   = axis.font[1] * lineMult;\n\n\t\t\tlet canOffs = _splits.map(val => round(getPos(val, scale, plotDim, plotOff)));\n\n\t\t\taxis._values.forEach((val, i) => {\n\t\t\t\tif (val == null)\n\t\t\t\t\treturn;\n\n\t\t\t\tif (ori == 0)\n\t\t\t\t\tx = canOffs[i];\n\t\t\t\telse\n\t\t\t\t\ty = canOffs[i];\n\n\t\t\t\t(\"\"+val).split(/\\n/gm).forEach((text, j) => {\n\t\t\t\t\tif (angle) {\n\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\tctx.translate(x, y + j * lineHeight);\n\t\t\t\t\t\tctx.rotate(angle);\n\t\t\t\t\t\tctx.fillText(text, 0, 0);\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tctx.fillText(text, x, y + j * lineHeight);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// axis label\n\t\t\tif (axis.label) {\n\t\t\t\tctx.save();\n\n\t\t\t\tlet baseLpos = round(axis._lpos * pxRatio);\n\n\t\t\t\tif (ori == 1) {\n\t\t\t\t\tx = y = 0;\n\n\t\t\t\t\tctx.translate(\n\t\t\t\t\t\tbaseLpos,\n\t\t\t\t\t\tround(plotTop + plotHgt / 2),\n\t\t\t\t\t);\n\t\t\t\t\tctx.rotate((side == 3 ? -PI : PI) / 2);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx = round(plotLft + plotWid / 2);\n\t\t\t\t\ty = baseLpos;\n\t\t\t\t}\n\n\t\t\t\tctx.font         = axis.labelFont[0];\n\t\t\t//\tctx.fillStyle    = axis.labelStroke || hexBlack;\t\t\t\t\t\t// rgba?\n\t\t\t\tctx.textAlign    = \"center\";\n\t\t\t\tctx.textBaseline = side == 2 ? TOP : BOTTOM;\n\n\t\t\t\tctx.fillText(axis.label, x, y);\n\n\t\t\t\tctx.restore();\n\t\t\t}\n\n\t\t\t// ticks\n\t\t\tif (ticks.show) {\n\t\t\t\tdrawOrthoLines(\n\t\t\t\t\tcanOffs,\n\t\t\t\t\tticks.filter(self, splits, i, _space, incr),\n\t\t\t\t\tori,\n\t\t\t\t\tside,\n\t\t\t\t\tbasePos,\n\t\t\t\t\ttickSize,\n\t\t\t\t\troundDec(ticks[WIDTH] * pxRatio, 3),\n\t\t\t\t\tticks.stroke,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// grid\n\t\t\tlet grid = axis.grid;\n\n\t\t\tif (grid.show) {\n\t\t\t\tdrawOrthoLines(\n\t\t\t\t\tcanOffs,\n\t\t\t\t\tgrid.filter(self, splits, i, _space, incr),\n\t\t\t\t\tori,\n\t\t\t\t\tori == 0 ? 2 : 1,\n\t\t\t\t\tori == 0 ? plotTop : plotLft,\n\t\t\t\t\tori == 0 ? plotHgt : plotWid,\n\t\t\t\t\troundDec(grid[WIDTH] * pxRatio, 3),\n\t\t\t\t\tgrid.stroke,\n\t\t\t\t\tgrid.dash,\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\tfire(\"drawAxes\");\n\t}\n\n\tfunction resetYSeries(minMax) {\n\t//\tlog(\"resetYSeries()\", arguments);\n\n\t\tseries.forEach((s, i) => {\n\t\t\tif (i > 0) {\n\t\t\t\ts._paths = null;\n\n\t\t\t\tif (minMax) {\n\t\t\t\t\ts.min = null;\n\t\t\t\t\ts.max = null;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tlet queuedCommit = false;\n\n\t// could do rAF instead of microTask, or Promose.resolve().then()\n\tfunction commit() {\n\t\tif (!queuedCommit) {\n\t\t\tmicroTask(_commit);\n\t\t\tqueuedCommit = true;\n\t\t}\n\t}\n\n\tfunction _commit() {\n\t//\tlog(\"_commit()\", arguments);\n\n\t\tif (shouldSetScales) {\n\t\t\tsetScales();\n\t\t\tshouldSetScales = false;\n\t\t}\n\n\t\tif (shouldConvergeSize) {\n\t\t\tconvergeSize();\n\t\t\tshouldConvergeSize = false;\n\t\t}\n\n\t\tif (shouldSetSize) {\n\t\t\tsetStylePx(under, LEFT,   plotLftCss);\n\t\t\tsetStylePx(under, TOP,    plotTopCss);\n\t\t\tsetStylePx(under, WIDTH,  plotWidCss);\n\t\t\tsetStylePx(under, HEIGHT, plotHgtCss);\n\n\t\t\tsetStylePx(over, LEFT,    plotLftCss);\n\t\t\tsetStylePx(over, TOP,     plotTopCss);\n\t\t\tsetStylePx(over, WIDTH,   plotWidCss);\n\t\t\tsetStylePx(over, HEIGHT,  plotHgtCss);\n\n\t\t\tsetStylePx(wrap, WIDTH,   fullWidCss);\n\t\t\tsetStylePx(wrap, HEIGHT,  fullHgtCss);\n\n\t\t\tcan[WIDTH]  = round(fullWidCss * pxRatio);\n\t\t\tcan[HEIGHT] = round(fullHgtCss * pxRatio);\n\n\t\t\tsyncRect();\n\n\t\t\tfire(\"setSize\");\n\n\t\t\tshouldSetSize = false;\n\t\t}\n\n\t//\tif (shouldSetSelect) {\n\t\t// TODO: update .u-select metrics (if visible)\n\t\t//\tsetStylePx(selectDiv, TOP, select[TOP] = 0);\n\t\t//\tsetStylePx(selectDiv, LEFT, select[LEFT] = 0);\n\t\t//\tsetStylePx(selectDiv, WIDTH, select[WIDTH] = 0);\n\t\t//\tsetStylePx(selectDiv, HEIGHT, select[HEIGHT] = 0);\n\t\t//\tshouldSetSelect = false;\n\t//\t}\n\n\t\tif ( cursor.show && shouldSetCursor) {\n\t\t\tupdateCursor();\n\t\t\tshouldSetCursor = false;\n\t\t}\n\n\t//\tif (true && legend.show && legend.live && shouldSetLegend) {}\n\n\t\tctx.clearRect(0, 0, can[WIDTH], can[HEIGHT]);\n\t\tfire(\"drawClear\");\n\t\tdrawAxesGrid();\n\t\tdataLen > 0 && drawSeries();\n\t\tfire(\"draw\");\n\n\t\tif (!ready) {\n\t\t\tready = true;\n\t\t\tself.status = 1;\n\n\t\t\tfire(\"ready\");\n\t\t}\n\n\t\tqueuedCommit = false;\n\t}\n\n\tself.redraw = rebuildPaths => {\n\t\tif (rebuildPaths !== false)\n\t\t\t_setScale(xScaleKey, scales[xScaleKey].min, scales[xScaleKey].max);\n\t\telse\n\t\t\tcommit();\n\t};\n\n\t// redraw() => setScale('x', scales.x.min, scales.x.max);\n\n\t// explicit, never re-ranged (is this actually true? for x and y)\n\tfunction setScale(key, opts) {\n\t\tlet sc = scales[key];\n\n\t\tif (sc.from == null) {\n\t\t\tif (dataLen == 0) {\n\t\t\t\tlet minMax = sc.range(self, opts.min, opts.max, key);\n\t\t\t\topts.min = minMax[0];\n\t\t\t\topts.max = minMax[1];\n\t\t\t}\n\n\t\t\tif (dataLen > 1 && opts.min != null && opts.max != null && opts.max - opts.min < 1e-16)\n\t\t\t\treturn;\n\n\t\t\tif (key == xScaleKey) {\n\t\t\t\tif (sc.distr == 2 && dataLen > 0) {\n\t\t\t\t\topts.min = closestIdx(opts.min, data[0]);\n\t\t\t\t\topts.max = closestIdx(opts.max, data[0]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t//\tlog(\"setScale()\", arguments);\n\n\t\t\tpendScales[key] = opts;\n\n\t\t\tshouldSetScales = true;\n\t\t\tcommit();\n\t\t}\n\t}\n\n\tself.setScale = setScale;\n\n//\tINTERACTION\n\n\tlet vt;\n\tlet hz;\n\n\t// starting position before cursor.move\n\tlet rawMouseLeft0;\n\tlet rawMouseTop0;\n\n\t// starting position\n\tlet mouseLeft0;\n\tlet mouseTop0;\n\n\t// current position before cursor.move\n\tlet rawMouseLeft1;\n\tlet rawMouseTop1;\n\n\t// current position\n\tlet mouseLeft1;\n\tlet mouseTop1;\n\n\tlet dragging = false;\n\n\tconst drag =  cursor.drag;\n\n\tlet dragX =  drag.x;\n\tlet dragY =  drag.y;\n\n\tif ( cursor.show) {\n\t\tif (cursor.x) {\n\t\t\tmouseLeft1 = cursor.left;\n\t\t\tvt = placeDiv(CURSOR_X, over);\n\t\t}\n\n\t\tif (cursor.y) {\n\t\t\tmouseTop1 = cursor.top;\n\t\t\thz = placeDiv(CURSOR_Y, over);\n\t\t}\n\t}\n\n\tconst select = self.select = assign({\n\t\tshow:   true,\n\t\tover:   true,\n\t\tleft:\t0,\n\t\twidth:\t0,\n\t\ttop:\t0,\n\t\theight:\t0,\n\t}, opts.select);\n\n\tconst selectDiv = select.show ? placeDiv(SELECT, select.over ? over : under) : null;\n\n\tfunction setSelect(opts, _fire) {\n\t\tif (select.show) {\n\t\t\tfor (let prop in opts)\n\t\t\t\tsetStylePx(selectDiv, prop, select[prop] = opts[prop]);\n\n\t\t\t_fire !== false && fire(\"setSelect\");\n\t\t}\n\t}\n\n\tself.setSelect = setSelect;\n\n\tfunction toggleDOM(i, onOff) {\n\t\tlet s = series[i];\n\t\tlet label = showLegend ? legendRows[i][0].parentNode : null;\n\n\t\tif (s.show)\n\t\t\tlabel && remClass(label, OFF);\n\t\telse {\n\t\t\tlabel && addClass(label, OFF);\n\t\t\t cursorPts.length > 1 && trans(cursorPts[i], -10, -10, plotWidCss, plotHgtCss);\n\t\t}\n\t}\n\n\tfunction _setScale(key, min, max) {\n\t\tsetScale(key, {min, max});\n\t}\n\n\tfunction setSeries(i, opts, pub) {\n\t//\tlog(\"setSeries()\", arguments);\n\n\t\tlet s = series[i];\n\n\t\t// will this cause redundant commit() if both show and focus are set?\n\t\tif (opts.focus != null)\n\t\t\tsetFocus(i);\n\n\t\tif (opts.show != null) {\n\t\t\ts.show = opts.show;\n\t\t\t toggleDOM(i, opts.show);\n\n\t\t\tif (s.band) {\n\t\t\t\t// not super robust, will break if two bands are adjacent\n\t\t\t\tlet ip = series[i+1] && series[i+1].band ? i+1 : i-1;\n\t\t\t\tseries[ip].show = s.show;\n\t\t\t\t toggleDOM(ip, opts.show);\n\t\t\t}\n\n\t\t\t_setScale(s.scale, null, null);\n\t\t\tcommit();\n\t\t}\n\n\t\tfire(\"setSeries\", i, opts);\n\n\t\t pub && sync.pub(\"setSeries\", self, i, opts);\n\t}\n\n\tself.setSeries = setSeries;\n\n\tfunction _alpha(i, value) {\n\t\tseries[i].alpha = value;\n\n\t\tif ( cursor.show && cursorPts[i])\n\t\t\tcursorPts[i].style.opacity = value;\n\n\t\tif ( showLegend && legendRows[i])\n\t\t\tlegendRows[i][0].parentNode.style.opacity = value;\n\t}\n\n\tfunction _setAlpha(i, value) {\n\t\tlet s = series[i];\n\n\t\t_alpha(i, value);\n\n\t\tif (s.band) {\n\t\t\t// not super robust, will break if two bands are adjacent\n\t\t\tlet ip = series[i+1].band ? i+1 : i-1;\n\t\t\t_alpha(ip, value);\n\t\t}\n\t}\n\n\t// y-distance\n\tlet closestDist;\n\tlet closestSeries;\n\tlet focusedSeries;\n\n\tfunction setFocus(i) {\n\t\tif (i != focusedSeries) {\n\t\t//\tlog(\"setFocus()\", arguments);\n\n\t\t\tseries.forEach((s, i2) => {\n\t\t\t\t_setAlpha(i2, i == null || i2 == 0 || i2 == i ? 1 : focus.alpha);\n\t\t\t});\n\n\t\t\tfocusedSeries = i;\n\t\t\tcommit();\n\t\t}\n\t}\n\n\tif (showLegend && cursorFocus) {\n\t\ton(mouseleave, legendEl, e => {\n\t\t\tif (cursor._lock)\n\t\t\t\treturn;\n\t\t\tsetSeries(null, {focus: false}, syncOpts.setSeries);\n\t\t\tupdateCursor();\n\t\t});\n\t}\n\n\tfunction scaleValueAtPos(pos, scale) {\n\t\tlet dim = plotWidCss;\n\n\t\tif (scale != xScaleKey) {\n\t\t\tdim = plotHgtCss;\n\t\t\tpos = dim - pos;\n\t\t}\n\n\t\tlet pct = pos / dim;\n\n\t\tlet sc = scales[scale],\n\t\t\t_min = sc.min,\n\t\t\t_max = sc.max;\n\n\t\tif (sc.distr == 3) {\n\t\t\t_min = log10(_min);\n\t\t\t_max = log10(_max);\n\t\t\treturn pow(10, _min + (_max - _min) * pct);\n\t\t}\n\t\telse\n\t\t\treturn _min + (_max - _min) * pct;\n\t}\n\n\tfunction closestIdxFromXpos(pos) {\n\t\tlet v = scaleValueAtPos(pos, xScaleKey);\n\t\treturn closestIdx(v, data[0], i0, i1);\n\t}\n\n\tself.valToIdx = val => closestIdx(val, data[0]);\n\tself.posToIdx = closestIdxFromXpos;\n\tself.posToVal = scaleValueAtPos;\n\tself.valToPos = (val, scale, can) => (\n\t\tscale == xScaleKey ?\n\t\tgetXPos(val, scales[scale],\n\t\t\tcan ? plotWid : plotWidCss,\n\t\t\tcan ? plotLft : 0,\n\t\t) :\n\t\tgetYPos(val, scales[scale],\n\t\t\tcan ? plotHgt : plotHgtCss,\n\t\t\tcan ? plotTop : 0,\n\t\t)\n\t);\n\n\t// defers calling expensive functions\n\tfunction batch(fn) {\n\t\tfn(self);\n\t\tcommit();\n\t}\n\n\tself.batch = batch;\n\n\t (self.setCursor = opts => {\n\t\tmouseLeft1 = opts.left;\n\t\tmouseTop1 = opts.top;\n\t//\tassign(cursor, opts);\n\t\tupdateCursor();\n\t});\n\n\tlet cursorRaf = 0;\n\n\tfunction updateCursor(ts, src) {\n\t//\tts == null && log(\"updateCursor()\", arguments);\n\n\t\tcursorRaf = 0;\n\n\t\trawMouseLeft1 = mouseLeft1;\n\t\trawMouseTop1 = mouseTop1;\n\n\t\t[mouseLeft1, mouseTop1] = cursor.move(self, mouseLeft1, mouseTop1);\n\n\t\tif (cursor.show) {\n\t\t\tcursor.x && trans(vt, round(mouseLeft1), 0, plotWidCss, plotHgtCss);\n\t\t\tcursor.y && trans(hz, 0, round(mouseTop1), plotWidCss, plotHgtCss);\n\t\t}\n\n\t\tlet idx;\n\n\t\t// when zooming to an x scale range between datapoints the binary search\n\t\t// for nearest min/max indices results in this condition. cheap hack :D\n\t\tlet noDataInRange = i0 > i1;\n\n\t\tclosestDist = inf;\n\n\t\t// if cursor hidden, hide points & clear legend vals\n\t\tif (mouseLeft1 < 0 || dataLen == 0 || noDataInRange) {\n\t\t\tidx = null;\n\n\t\t\tfor (let i = 0; i < series.length; i++) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\t cursorPts.length > 1 && trans(cursorPts[i], -10, -10, plotWidCss, plotHgtCss);\n\t\t\t\t}\n\n\t\t\t\tif (showLegend && legend.live) {\n\t\t\t\t\tif (i == 0 && multiValLegend)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tfor (let j = 0; j < legendRows[i].length; j++)\n\t\t\t\t\t\tlegendRows[i][j][firstChild].nodeValue = '--';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cursorFocus)\n\t\t\t\tsetSeries(null, {focus: true}, syncOpts.setSeries);\n\t\t}\n\t\telse {\n\t\t//\tlet pctY = 1 - (y / rect[HEIGHT]);\n\n\t\t\tlet valAtPos = scaleValueAtPos(mouseLeft1, xScaleKey);\n\n\t\t\tidx = closestIdx(valAtPos, data[0], i0, i1);\n\n\t\t\tlet scX = scales[xScaleKey];\n\n\t\t\tlet xPos = roundDec(getXPos(data[0][idx], scX, plotWidCss, 0), 3);\n\n\t\t\tfor (let i = 0; i < series.length; i++) {\n\t\t\t\tlet s = series[i];\n\n\t\t\t\tlet idx2  = cursor.dataIdx(self, i, idx, valAtPos);\n\t\t\t\tlet xPos2 = idx2 == idx ? xPos : roundDec(getXPos(data[0][idx2], scX, plotWidCss, 0), 3);\n\n\t\t\t\tif (i > 0 && s.show) {\n\t\t\t\t\tlet valAtIdx = data[i][idx2];\n\n\t\t\t\t\tlet yPos = valAtIdx == null ? -10 : roundDec(getYPos(valAtIdx, scales[s.scale], plotHgtCss, 0), 3);\n\n\t\t\t\t\tif (yPos > 0) {\n\t\t\t\t\t\tlet dist = abs(yPos - mouseTop1);\n\n\t\t\t\t\t\tif (dist <= closestDist) {\n\t\t\t\t\t\t\tclosestDist = dist;\n\t\t\t\t\t\t\tclosestSeries = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t cursorPts.length > 1 && trans(cursorPts[i], xPos2, yPos, plotWidCss, plotHgtCss);\n\t\t\t\t}\n\n\t\t\t\tif (showLegend && legend.live) {\n\t\t\t\t\tif ((idx2 == cursor.idx && !shouldSetLegend) || i == 0 && multiValLegend)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tlet src = i == 0 && xScaleDistr == 2 ? data0 : data[i];\n\n\t\t\t\t\tlet vals = multiValLegend ? s.values(self, i, idx2) : {_: s.value(self, src[idx2], i, idx2)};\n\n\t\t\t\t\tlet j = 0;\n\n\t\t\t\t\tfor (let k in vals)\n\t\t\t\t\t\tlegendRows[i][j++][firstChild].nodeValue = vals[k];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tshouldSetLegend = false;\n\t\t}\n\n\t\t// nit: cursor.drag.setSelect is assumed always true\n\t\tif (select.show && dragging) {\n\t\t\tif (src != null) {\n\t\t\t\tlet [xKey, yKey] = syncOpts.scales;\n\n\t\t\t\t// match the dragX/dragY implicitness/explicitness of src\n\t\t\t\tlet sdrag = src.cursor.drag;\n\t\t\t\tdragX = sdrag._x;\n\t\t\t\tdragY = sdrag._y;\n\n\t\t\t\tif (xKey) {\n\t\t\t\t\tlet sc = scales[xKey];\n\t\t\t\t\tlet srcLeft = src.posToVal(src.select[LEFT], xKey);\n\t\t\t\t\tlet srcRight = src.posToVal(src.select[LEFT] + src.select[WIDTH], xKey);\n\n\t\t\t\t\tselect[LEFT] = getXPos(srcLeft, sc, plotWidCss, 0);\n\t\t\t\t\tselect[WIDTH] = abs(select[LEFT] - getXPos(srcRight, sc, plotWidCss, 0));\n\n\t\t\t\t\tsetStylePx(selectDiv, LEFT, select[LEFT]);\n\t\t\t\t\tsetStylePx(selectDiv, WIDTH, select[WIDTH]);\n\n\t\t\t\t\tif (!yKey) {\n\t\t\t\t\t\tsetStylePx(selectDiv, TOP, select[TOP] = 0);\n\t\t\t\t\t\tsetStylePx(selectDiv, HEIGHT, select[HEIGHT] = plotHgtCss);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (yKey) {\n\t\t\t\t\tlet sc = scales[yKey];\n\t\t\t\t\tlet srcTop = src.posToVal(src.select[TOP], yKey);\n\t\t\t\t\tlet srcBottom = src.posToVal(src.select[TOP] + src.select[HEIGHT], yKey);\n\n\t\t\t\t\tselect[TOP] = getYPos(srcTop, sc, plotHgtCss, 0);\n\t\t\t\t\tselect[HEIGHT] = abs(select[TOP] - getYPos(srcBottom, sc, plotHgtCss, 0));\n\n\t\t\t\t\tsetStylePx(selectDiv, TOP, select[TOP]);\n\t\t\t\t\tsetStylePx(selectDiv, HEIGHT, select[HEIGHT]);\n\n\t\t\t\t\tif (!xKey) {\n\t\t\t\t\t\tsetStylePx(selectDiv, LEFT, select[LEFT] = 0);\n\t\t\t\t\t\tsetStylePx(selectDiv, WIDTH, select[WIDTH] = plotWidCss);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet rawDX = abs(rawMouseLeft1 - rawMouseLeft0);\n\t\t\t\tlet rawDY = abs(rawMouseTop1 - rawMouseTop0);\n\n\t\t\t\tdragX = drag.x && rawDX >= drag.dist;\n\t\t\t\tdragY = drag.y && rawDY >= drag.dist;\n\n\t\t\t\tlet uni = drag.uni;\n\n\t\t\t\tif (uni != null) {\n\t\t\t\t\t// only calc drag status if they pass the dist thresh\n\t\t\t\t\tif (dragX && dragY) {\n\t\t\t\t\t\tdragX = rawDX >= uni;\n\t\t\t\t\t\tdragY = rawDY >= uni;\n\n\t\t\t\t\t\t// force unidirectionality when both are under uni limit\n\t\t\t\t\t\tif (!dragX && !dragY) {\n\t\t\t\t\t\t\tif (rawDY > rawDX)\n\t\t\t\t\t\t\t\tdragY = true;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tdragX = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (drag.x && drag.y && (dragX || dragY))\n\t\t\t\t\t// if omni with no uni then both dragX / dragY should be true if either is true\n\t\t\t\t\tdragX = dragY = true;\n\n\t\t\t\tif (dragX) {\n\t\t\t\t\tlet minX = min(mouseLeft0, mouseLeft1);\n\t\t\t\t\tlet dx = abs(mouseLeft1 - mouseLeft0);\n\n\t\t\t\t\tsetStylePx(selectDiv, LEFT,  select[LEFT] = minX);\n\t\t\t\t\tsetStylePx(selectDiv, WIDTH, select[WIDTH] = dx);\n\n\t\t\t\t\tif (!dragY) {\n\t\t\t\t\t\tsetStylePx(selectDiv, TOP, select[TOP] = 0);\n\t\t\t\t\t\tsetStylePx(selectDiv, HEIGHT, select[HEIGHT] = plotHgtCss);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dragY) {\n\t\t\t\t\tlet minY = min(mouseTop0, mouseTop1);\n\t\t\t\t\tlet dy = abs(mouseTop1 - mouseTop0);\n\n\t\t\t\t\tsetStylePx(selectDiv, TOP,    select[TOP] = minY);\n\t\t\t\t\tsetStylePx(selectDiv, HEIGHT, select[HEIGHT] = dy);\n\n\t\t\t\t\tif (!dragX) {\n\t\t\t\t\t\tsetStylePx(selectDiv, LEFT, select[LEFT] = 0);\n\t\t\t\t\t\tsetStylePx(selectDiv, WIDTH, select[WIDTH] = plotWidCss);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!dragX && !dragY) {\n\t\t\t\t\t// the drag didn't pass the dist requirement\n\t\t\t\t\tsetStylePx(selectDiv, HEIGHT, select[HEIGHT] = 0);\n\t\t\t\t\tsetStylePx(selectDiv, WIDTH,  select[WIDTH]  = 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcursor.idx = idx;\n\t\tcursor.left = mouseLeft1;\n\t\tcursor.top = mouseTop1;\n\t\tdrag._x = dragX;\n\t\tdrag._y = dragY;\n\n\t\t// if ts is present, means we're implicitly syncing own cursor as a result of debounced rAF\n\t\tif (ts != null) {\n\t\t\t// this is not technically a \"mousemove\" event, since it's debounced, rename to setCursor?\n\t\t\t// since this is internal, we can tweak it later\n\t\t\tsync.pub(mousemove, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, idx);\n\n\t\t\tif (cursorFocus) {\n\t\t\t\tsetSeries(closestDist <= focus.prox ? closestSeries : null, {focus: true}, syncOpts.setSeries);\n\t\t\t}\n\t\t}\n\n\t\tready && fire(\"setCursor\");\n\t}\n\n\tlet rect = null;\n\n\tfunction syncRect() {\n\t\trect = over.getBoundingClientRect();\n\t}\n\n\tfunction mouseMove(e, src, _x, _y, _w, _h, _i) {\n\t\tif (cursor._lock)\n\t\t\treturn;\n\n\t\tcacheMouse(e, src, _x, _y, _w, _h, _i, false, e != null);\n\n\t\tif (e != null) {\n\t\t\tif (cursorRaf == 0)\n\t\t\t\tcursorRaf = rAF(updateCursor);\n\t\t}\n\t\telse\n\t\t\tupdateCursor(null, src);\n\t}\n\n\tfunction cacheMouse(e, src, _x, _y, _w, _h, _i, initial, snap) {\n\t\tif (e != null) {\n\t\t\t_x = e.clientX - rect.left;\n\t\t\t_y = e.clientY - rect.top;\n\t\t}\n\t\telse {\n\t\t\tif (_x < 0 || _y < 0) {\n\t\t\t\tmouseLeft1 = -10;\n\t\t\t\tmouseTop1 = -10;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet [xKey, yKey] = syncOpts.scales;\n\n\t\t\tif (xKey != null)\n\t\t\t\t_x = getXPos(src.posToVal(_x, xKey), scales[xKey], plotWidCss, 0);\n\t\t\telse\n\t\t\t\t_x = plotWidCss * (_x/_w);\n\n\t\t\tif (yKey != null)\n\t\t\t\t_y = getYPos(src.posToVal(_y, yKey), scales[yKey], plotHgtCss, 0);\n\t\t\telse\n\t\t\t\t_y = plotHgtCss * (_y/_h);\n\t\t}\n\n\t\tif (snap) {\n\t\t\tif (_x <= 1 || _x >= plotWidCss - 1)\n\t\t\t\t_x = incrRound(_x, plotWidCss);\n\n\t\t\tif (_y <= 1 || _y >= plotHgtCss - 1)\n\t\t\t\t_y = incrRound(_y, plotHgtCss);\n\t\t}\n\n\t\tif (initial) {\n\t\t\trawMouseLeft0 = _x;\n\t\t\trawMouseTop0 = _y;\n\n\t\t\t[mouseLeft0, mouseTop0] = cursor.move(self, _x, _y);\n\t\t}\n\t\telse {\n\t\t\tmouseLeft1 = _x;\n\t\t\tmouseTop1 = _y;\n\t\t}\n\t}\n\n\tfunction hideSelect() {\n\t\tsetSelect({\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t}, false);\n\t}\n\n\tfunction mouseDown(e, src, _x, _y, _w, _h, _i) {\n\t\tdragging = true;\n\t\tdragX = dragY = drag._x = drag._y = false;\n\n\t\tcacheMouse(e, src, _x, _y, _w, _h, _i, true, false);\n\n\t\tif (e != null) {\n\t\t\tonMouse(mouseup, doc, mouseUp);\n\t\t\tsync.pub(mousedown, self, mouseLeft0, mouseTop0, plotWidCss, plotHgtCss, null);\n\t\t}\n\t}\n\n\tfunction mouseUp(e, src, _x, _y, _w, _h, _i) {\n\t\tdragging = drag._x = drag._y = false;\n\n\t\tcacheMouse(e, src, _x, _y, _w, _h, _i, false, true);\n\n\t\tlet hasSelect = select[WIDTH] > 0 || select[HEIGHT] > 0;\n\n\t\thasSelect && setSelect(select);\n\n\t\tif (drag.setScale && hasSelect) {\n\t\t//\tif (syncKey != null) {\n\t\t//\t\tdragX = drag.x;\n\t\t//\t\tdragY = drag.y;\n\t\t//\t}\n\n\t\t\tif (dragX) {\n\t\t\t\t_setScale(xScaleKey,\n\t\t\t\t\tscaleValueAtPos(select[LEFT], xScaleKey),\n\t\t\t\t\tscaleValueAtPos(select[LEFT] + select[WIDTH], xScaleKey)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (dragY) {\n\t\t\t\tfor (let k in scales) {\n\t\t\t\t\tlet sc = scales[k];\n\n\t\t\t\t\tif (k != xScaleKey && sc.from == null && sc.min != inf) {\n\t\t\t\t\t\t_setScale(k,\n\t\t\t\t\t\t\tscaleValueAtPos(select[TOP] + select[HEIGHT], k),\n\t\t\t\t\t\t\tscaleValueAtPos(select[TOP], k)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thideSelect();\n\t\t}\n\t\telse if (cursor.lock) {\n\t\t\tcursor._lock = !cursor._lock;\n\n\t\t\tif (!cursor._lock)\n\t\t\t\tupdateCursor();\n\t\t}\n\n\t\tif (e != null) {\n\t\t\toffMouse(mouseup, doc);\n\t\t\tsync.pub(mouseup, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, null);\n\t\t}\n\t}\n\n\tfunction mouseLeave(e, src, _x, _y, _w, _h, _i) {\n\t\tif (!cursor._lock) {\n\t\t\tlet _dragging = dragging;\n\n\t\t\tif (dragging) {\n\t\t\t\t// handle case when mousemove aren't fired all the way to edges by browser\n\t\t\t\tlet snapX = true;\n\t\t\t\tlet snapY = true;\n\t\t\t\tlet snapProx = 10;\n\n\t\t\t\tif (dragX && dragY) {\n\t\t\t\t\t// maybe omni corner snap\n\t\t\t\t\tsnapX = mouseLeft1 <= snapProx || mouseLeft1 >= plotWidCss - snapProx;\n\t\t\t\t\tsnapY = mouseTop1  <= snapProx || mouseTop1  >= plotHgtCss - snapProx;\n\t\t\t\t}\n\n\t\t\t\tif (dragX && snapX) {\n\t\t\t\t\tlet dLft = mouseLeft1;\n\t\t\t\t\tlet dRgt = plotWidCss - mouseLeft1;\n\n\t\t\t\t\tlet xMin = min(dLft, dRgt);\n\n\t\t\t\t\tif (xMin == dLft)\n\t\t\t\t\t\tmouseLeft1 = 0;\n\t\t\t\t\tif (xMin == dRgt)\n\t\t\t\t\t\tmouseLeft1 = plotWidCss;\n\t\t\t\t}\n\n\t\t\t\tif (dragY && snapY) {\n\t\t\t\t\tlet dTop = mouseTop1;\n\t\t\t\t\tlet dBtm = plotHgtCss - mouseTop1;\n\n\t\t\t\t\tlet yMin = min(dTop, dBtm);\n\n\t\t\t\t\tif (yMin == dTop)\n\t\t\t\t\t\tmouseTop1 = 0;\n\t\t\t\t\tif (yMin == dBtm)\n\t\t\t\t\t\tmouseTop1 = plotHgtCss;\n\t\t\t\t}\n\n\t\t\t\tupdateCursor(1);\n\n\t\t\t\tdragging = false;\n\t\t\t}\n\n\t\t\tmouseLeft1 = -10;\n\t\t\tmouseTop1 = -10;\n\n\t\t\t// passing a non-null timestamp to force sync/mousemove event\n\t\t\tupdateCursor(1);\n\n\t\t\tif (_dragging)\n\t\t\t\tdragging = _dragging;\n\t\t}\n\t}\n\n\tfunction dblClick(e, src, _x, _y, _w, _h, _i) {\n\t\tautoScaleX();\n\n\t\thideSelect();\n\n\t\tif (e != null)\n\t\t\tsync.pub(dblclick, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, null);\n\t}\n\n\t// internal pub/sub\n\tconst events = {};\n\n\tevents[mousedown] = mouseDown;\n\tevents[mousemove] = mouseMove;\n\tevents[mouseup] = mouseUp;\n\tevents[dblclick] = dblClick;\n\tevents[\"setSeries\"] = (e, src, idx, opts) => {\n\t\tsetSeries(idx, opts);\n\t};\n\n\tlet deb;\n\n\tif ( cursor.show) {\n\t\tonMouse(mousedown, over, mouseDown);\n\t\tonMouse(mousemove, over, mouseMove);\n\t\tonMouse(mouseenter, over, syncRect);\n\t\t// this has to be rAF'd so it always fires after the last queued/rAF'd updateCursor\n\t\tonMouse(mouseleave, over, e => { rAF(mouseLeave); });\n\n\t\tonMouse(dblclick, over, dblClick);\n\n\t\tdeb = debounce(syncRect, 100);\n\n\t\ton(resize, win, deb);\n\t\ton(scroll, win, deb);\n\n\t\tself.syncRect = syncRect;\n\t}\n\n\t// external on/off\n\tconst hooks = self.hooks = opts.hooks || {};\n\n\tfunction fire(evName, a1, a2) {\n\t\tif (evName in hooks) {\n\t\t\thooks[evName].forEach(fn => {\n\t\t\t\tfn.call(null, self, a1, a2);\n\t\t\t});\n\t\t}\n\t}\n\n\t(opts.plugins || []).forEach(p => {\n\t\tfor (let evName in p.hooks)\n\t\t\thooks[evName] = (hooks[evName] || []).concat(p.hooks[evName]);\n\t});\n\n\tconst syncOpts =  assign({\n\t\tkey: null,\n\t\tsetSeries: false,\n\t\tscales: [xScaleKey, null]\n\t}, cursor.sync);\n\n\tconst syncKey =  syncOpts.key;\n\n\tconst sync =  (syncKey != null ? (syncs[syncKey] = syncs[syncKey] || _sync()) : _sync());\n\n\t sync.sub(self);\n\n\tfunction pub(type, src, x, y, w, h, i) {\n\t\tevents[type](null, src, x, y, w, h, i);\n\t}\n\n\t (self.pub = pub);\n\n\tfunction destroy() {\n\t\t sync.unsub(self);\n\t\t off(resize, win, deb);\n\t\t off(scroll, win, deb);\n\t\troot.remove();\n\t\tfire(\"destroy\");\n\t}\n\n\tself.destroy = destroy;\n\n\tfunction _init() {\n\t\tfire(\"init\", opts, data);\n\n\t\tsetData(data || opts.data, false);\n\n\t\tif (pendScales[xScaleKey])\n\t\t\tsetScale(xScaleKey, pendScales[xScaleKey]);\n\t\telse\n\t\t\tautoScaleX();\n\n\t\t_setSize(opts[WIDTH], opts[HEIGHT]);\n\n\t\tsetSelect(select, false);\n\t}\n\n\tif (then) {\n\t\tif (then instanceof HTMLElement) {\n\t\t\tthen.appendChild(root);\n\t\t\t_init();\n\t\t}\n\t\telse\n\t\t\tthen(self, _init);\n\t}\n\telse\n\t\t_init();\n\n\treturn self;\n}\n\nuPlot.assign = assign;\nuPlot.fmtNum = fmtNum;\nuPlot.rangeNum = rangeNum;\nuPlot.rangeLog = rangeLog;\n\n{\n\tuPlot.fmtDate = fmtDate;\n\tuPlot.tzDate  = tzDate;\n}\n\nexport default uPlot;\n"],"names":[],"mappings":"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"}
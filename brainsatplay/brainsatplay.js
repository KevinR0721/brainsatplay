var brainsatplay;(()=>{"use strict";var e={d:(n,t)=>{for(var s in t)e.o(t,s)&&!e.o(n,s)&&Object.defineProperty(n,s,{enumerable:!0,get:t[s]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},n={};(()=>{e.r(n),e.d(n,{brainsatplay:()=>t});class t{constructor(e="",n="",t="public",s="",o="http://localhost:8080",i="http://127.0.0.1:8000"){this.devices=[],this.info={nDevices:0,auth:{url:new URL(o),username:e,password:n,access:t,appname:s,consent:{raw:!1,brains:!1}},subscribed:!1,connections:[],localHostURL:i},this.socket=null}connect(e="local",n="FreeEEG32_2",t=!0,s=!0){null==this.socket&&(this.socket=this.setupWebSocket(),this.subscribed=!0),this.info.nDevices++}async login(e=this.info.auth,n=this.info.auth.url.toString()){n=this.checkURL(n);let t=JSON.stringify(e),s=await fetch(n+"login",{method:"POST",mode:"cors",headers:new Headers({Accept:"application/json","Content-Type":"application/json"}),body:t}).then((e=>e.json().then((e=>e)))).then((e=>e)).catch((function(e){console.error("\n"+e.message)}));return"OK"===s.result&&(this.info.auth.username=s.msg),s}async signup(e={},n=this.info.auth.url.toString()){n=this.checkURL(n);let t=JSON.stringify(e);return await fetch(n.toString()+"signup",{method:"POST",mode:"cors",headers:new Headers({Accept:"application/json","Content-Type":"application/json"}),body:t}).then((e=>e.json().then((e=>e)))).then((e=>(console.log("\n"+e),e))).catch((function(e){console.error("\n"+e.message)}))}async request(e,n="POST",t="",s=this.info.auth.url.toString()){if(""!==t){s=this.checkURL(s),t=this.checkPathname(t);let o={method:n,mode:"cors",headers:{Accept:"application/json","Content-Type":"application/json"}};return"POST"===n&&(o.body=JSON.stringify(e)),await fetch(s+t,o).then((e=>e.json().then((e=>e.message)))).catch((function(e){console.error("\n"+e.message)}))}console.error("You must provide a valid pathname to request resources from "+s)}setupWebSocket(){let e=null,n=["username"+this.info.auth.username,"password"+this.info.auth.password,"appname"+this.info.auth.appname];if(console.log(this.info.auth.url),"http:"===this.info.auth.url.protocol)e=new WebSocket("ws://"+this.info.auth.url.host,n);else{if("https:"!==this.info.auth.url.protocol)return void console.log("invalid protocol");e=new WebSocket("wss://"+this.info.auth.url.host,n)}return e.onerror=()=>{console.log("error")},e.onopen=()=>{console.log("ping"),e.send(JSON.stringify({msg:"ping"}))},e.onmessage=e=>{let n=JSON.parse(e.data);console.log("message",n.msg)},e.onclose=e=>{console.log("close")},e}sendWSCommand(e=this.socket,n="",t={}){e.status&&("initializeBrains"===n?e.send(JSON.stringify({destination:"initializeBrains",public:"public"===this.auth.access})):"bci"===n&&(t.destination="bci",t.id=this.info.auth.username,t.consent=this.info.auth.consent,this.info.auth.consent.game,!1===this.info.auth.consent.raw&&(t.signal=[],t.time=[]),t=JSON.stringify(t),e.send(t)))}getUsers(e={destination:"initializeBrains",appname:"",msg:"",nBrains:0,privateBrains:0,privateInfo:"",ninterfaces:0,ids:[],channelNames:[]}){this.socket.send(JSON.stringify(e))}onNewConnection(e){this.info.connections.push({username:e.id,access:e.access,channelNames:e.channelNames,destination:e.destination}),this.info.nDevices++}onConnectionLost(e){let n=!1;this.info.connections.find(((t,s)=>{if(t.username===e.username)return n=!0,!0})),!0===n&&(this.info.connections.splice(0,1),this.info.nDevices--)}checkURL(e){return"/"!==e.slice(-1)&&(e+="/"),e}checkPathname(e){return"/"===e.slice(0)&&e.splice(0,1),e}}})(),brainsatplay=n})();
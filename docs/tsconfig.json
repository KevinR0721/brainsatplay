// Good setup explanations:
// https://www.typescriptlang.org/docs/handbook/react-&-webpack.html
// https://blog.angularindepth.com/configuring-typescript-compiler-a84ed8f87e3
// http://www.westerndevs.com/javascript/How-to-Compile-TypeScript-into-a-Single-File-with-SystemJS-Modules-with-Gulp/
{
    "compilerOptions": {
      /* Basic Options */
      "target": "es6",                         /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', or 'ESNEXT'. */
      "module": "commonjs",                       /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
      "lib": ["es2017", "dom"],                   /* Specify library files to be included in the compilation:  */
      "rootDir": "../src/library",                         /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
      "jsx": "react",                          /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
      "outDir": "dist/",                          /* Redirect output structure to the directory. */
      "sourceMap": true,                          /* Generates corresponding '.map' file. */
      "allowJs": true,                         /* Allow javascript files to be compiled. */
      // "checkJs": true,                         /* Report errors in .js files. */
      "declaration": true,                        /* Generates corresponding '.d.ts' file. */
      // "outFile": "./index.js",                 /* Concatenate and emit output to single file. */
      // "removeComments": true,                  /* Do not emit comments to output. */
      // "noEmit": true,                          /* Do not emit outputs. */
      "importHelpers": true,                      /* Import emit helpers from 'tslib'. */
      // "downlevelIteration": true,              /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
      // "isolatedModules": true,                 /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
      "pretty": true,                             /* Stylize errors and messages using color and context (experimental). */
      "resolveJsonModule": true,
  
      /* -- Strict Type-Checking Options -- */
      "alwaysStrict": true,                       /* Parse in strict mode and emit "use strict" for each source file. */
      "noImplicitAny": true,                      /* Raise error on expressions and declarations with an implied 'any' type. */
      "noImplicitThis": true,                     /* Raise error on 'this' expressions with an implied 'any' type. */
      "strict": true,                             /* Enable all strict type-checking options. */
      "strictFunctionTypes": true,                /* Enable strict checking of function types. */
      "strictNullChecks": true,                   /* Enable strict null checks. */
      "strictPropertyInitialization": true,       /* Ensure non-undefined class properties are initialized in the constructor. */
      // "noStrictGenericChecks": true,           /* Disable strict checking of generic signatures in function types. */
      
  
      /* -- Additional Checks -- */
      "noFallthroughCasesInSwitch": true,          /* Report errors for fallthrough cases in switch statement. */
      "noImplicitReturns": false,                  /* Report error when not all code paths in function return a value. */
      "noUnusedLocals": false,                     /* Report errors on unused locals. */
      "noUnusedParameters": false,                 /* Report errors on unused parameters. */
      
      /* Module Resolution Options */
      "moduleResolution": "node",                 /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
      
    },
    "include": [
      "../src/libraries"
    ],
  }
